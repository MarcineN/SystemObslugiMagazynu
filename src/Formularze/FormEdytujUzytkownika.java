/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularze;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FormEdytujUzytkownika extends javax.swing.JFrame {

    private int xMouse;
    private int yMouse;
    private static Connection con;

    /**
     * Creates new form FormEdytujUzytkownika
     */
    public FormEdytujUzytkownika(Connection con) {
        this.con = con;

        initComponents();
        this.setLocationRelativeTo(this);
        pokaz_liste_uzytk(0);
    }

    public FormEdytujUzytkownika() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientNaglowek = new keeptoo.KGradientPanel();
        textWyjscie = new javax.swing.JLabel();
        textMinimalizuj = new javax.swing.JLabel();
        textNaglowek = new javax.swing.JLabel();
        gradientStopka = new keeptoo.KGradientPanel();
        textStopkaL = new javax.swing.JLabel();
        textStopkaP = new javax.swing.JLabel();
        gradientGlowny = new keeptoo.KGradientPanel();
        pWyszukaj = new javax.swing.JButton();
        poleWyszukiwanie = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUzytkownicy = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gradientNaglowek.setkEndColor(new java.awt.Color(65, 131, 215));
        gradientNaglowek.setkGradientFocus(600);
        gradientNaglowek.setkStartColor(new java.awt.Color(58, 83, 155));
        gradientNaglowek.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                gradientNaglowekMouseDragged(evt);
            }
        });
        gradientNaglowek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gradientNaglowekMousePressed(evt);
            }
        });

        textWyjscie.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        textWyjscie.setForeground(new java.awt.Color(255, 255, 255));
        textWyjscie.setText("X");
        textWyjscie.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textWyjscie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textWyjscieMouseClicked(evt);
            }
        });

        textMinimalizuj.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        textMinimalizuj.setForeground(new java.awt.Color(255, 255, 255));
        textMinimalizuj.setText("-");
        textMinimalizuj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textMinimalizuj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textMinimalizujMouseClicked(evt);
            }
        });

        textNaglowek.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNaglowek.setForeground(new java.awt.Color(255, 255, 255));
        textNaglowek.setText("EDYTOWANIE UZYTKOWNIKOW");

        javax.swing.GroupLayout gradientNaglowekLayout = new javax.swing.GroupLayout(gradientNaglowek);
        gradientNaglowek.setLayout(gradientNaglowekLayout);
        gradientNaglowekLayout.setHorizontalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientNaglowekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textNaglowek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 346, Short.MAX_VALUE)
                .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textWyjscie)
                .addGap(21, 21, 21))
        );
        gradientNaglowekLayout.setVerticalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientNaglowekLayout.createSequentialGroup()
                .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textWyjscie)
                    .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNaglowek))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        getContentPane().add(gradientNaglowek, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 50));

        gradientStopka.setkEndColor(new java.awt.Color(98, 98, 98));
        gradientStopka.setkGradientFocus(600);
        gradientStopka.setkStartColor(new java.awt.Color(41, 59, 76));

        textStopkaL.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaL.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaL.setText(" ver. 1.0.0");
        textStopkaL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        textStopkaP.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaP.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaP.setText("Copyright Â© Projekt i kodowanie: Marcin Kos");
        textStopkaP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout gradientStopkaLayout = new javax.swing.GroupLayout(gradientStopka);
        gradientStopka.setLayout(gradientStopkaLayout);
        gradientStopkaLayout.setHorizontalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientStopkaLayout.createSequentialGroup()
                .addComponent(textStopkaL, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 224, Short.MAX_VALUE)
                .addComponent(textStopkaP, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        gradientStopkaLayout.setVerticalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textStopkaL, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
            .addComponent(textStopkaP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(gradientStopka, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 700, 20));

        gradientGlowny.setkEndColor(new java.awt.Color(44, 62, 80));
        gradientGlowny.setkStartColor(new java.awt.Color(44, 62, 80));

        pWyszukaj.setBackground(new java.awt.Color(43, 87, 157));
        pWyszukaj.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pWyszukaj.setForeground(new java.awt.Color(255, 255, 255));
        pWyszukaj.setText("Szukaj");
        pWyszukaj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pWyszukaj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pWyszukajMouseClicked(evt);
            }
        });
        pWyszukaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pWyszukajActionPerformed(evt);
            }
        });

        poleWyszukiwanie.setBackground(new java.awt.Color(108, 122, 137));
        poleWyszukiwanie.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleWyszukiwanie.setForeground(new java.awt.Color(255, 255, 255));
        poleWyszukiwanie.setToolTipText("");
        poleWyszukiwanie.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));
        poleWyszukiwanie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                poleWyszukiwanieKeyPressed(evt);
            }
        });

        tabelaUzytkownicy.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabelaUzytkownicy.setForeground(new java.awt.Color(108, 122, 137));
        tabelaUzytkownicy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Login", "Imie", "Nazwisko", "Data rejestracji", "Typ konta", "Zablokowany"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaUzytkownicy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaUzytkownicyMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaUzytkownicy);
        if (tabelaUzytkownicy.getColumnModel().getColumnCount() > 0) {
            tabelaUzytkownicy.getColumnModel().getColumn(0).setMaxWidth(28);
        }

        javax.swing.GroupLayout gradientGlownyLayout = new javax.swing.GroupLayout(gradientGlowny);
        gradientGlowny.setLayout(gradientGlownyLayout);
        gradientGlownyLayout.setHorizontalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientGlownyLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addComponent(poleWyszukiwanie, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pWyszukaj)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        gradientGlownyLayout.setVerticalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientGlownyLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poleWyszukiwanie, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pWyszukaj))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(gradientGlowny, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 700, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textWyjscieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textWyjscieMouseClicked
        this.dispose();

    }//GEN-LAST:event_textWyjscieMouseClicked

    private void textMinimalizujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMinimalizujMouseClicked
        this.setState(FormEdytujUzytkownika.ICONIFIED);
    }//GEN-LAST:event_textMinimalizujMouseClicked

    private void gradientNaglowekMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_gradientNaglowekMouseDragged

    private void gradientNaglowekMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_gradientNaglowekMousePressed

    private void poleWyszukiwanieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_poleWyszukiwanieKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            pokaz_liste_uzytk(1);
        }
    }//GEN-LAST:event_poleWyszukiwanieKeyPressed

    private void pWyszukajMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pWyszukajMouseClicked
        pokaz_liste_uzytk(1);
    }//GEN-LAST:event_pWyszukajMouseClicked

    private void pWyszukajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pWyszukajActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pWyszukajActionPerformed

    private void tabelaUzytkownicyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaUzytkownicyMouseClicked

        if (evt.getClickCount() == 2) {
            if (tabelaUzytkownicy.getSelectedRow() == -1) { // -1 brak wybranego wiersza
                JOptionPane.showMessageDialog(this, "Najpierw wybierz wiersz do edycji! ", "BÅÄd!", 2);
            } else {
                FormDodajEdytujUzytkownika FDEU = new FormDodajEdytujUzytkownika(con, tabelaUzytkownicy,this);
                FDEU.setVisible(true);
            }
        }


    }//GEN-LAST:event_tabelaUzytkownicyMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormEdytujUzytkownika.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormEdytujUzytkownika.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormEdytujUzytkownika.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormEdytujUzytkownika.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormEdytujUzytkownika().setVisible(true);
            }
        });
    }

    public ArrayList<ListaUzytkownikow> listaUzytk(int wer) {
        ArrayList<ListaUzytkownikow> lu = new ArrayList<>();
        PreparedStatement pobierzUzytk;
        ResultSet wpu; //wynikiPobierzUzytk
        String wersja = ""; // Dodatkowy argument do query w przypadku uzycia opcji "szukaj"
        if (wer == 1) {
            wersja = " WHERE login LIKE " + "'%" + poleWyszukiwanie.getText() + "%'" + " OR imie LIKE " + "'%" + poleWyszukiwanie.getText() + "%'";
        }

        try {
            String query1 = "SELECT id_u,login,imie,nazwisko,data_rejestracji,typ_konta,zablokowany FROM uzytkownicy" + wersja + " ORDER BY id_u";
            pobierzUzytk = con.prepareStatement(query1);
            wpu = pobierzUzytk.executeQuery(query1);

            ListaUzytkownikow lu_;
            while (wpu.next()) {
                lu_ = new ListaUzytkownikow(con, wpu.getInt("id_u"), wpu.getString("login"), wpu.getString("imie"), wpu.getString("nazwisko"), wpu.getString("data_rejestracji"), wpu.getString("typ_konta"), wpu.getInt("zablokowany"));
                lu.add(lu_);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "BÅÄd!", 2);
        }

        return lu;
    }

    public void pokaz_liste_uzytk(int wer) {
        ArrayList<ListaUzytkownikow> lista = listaUzytk(wer);
        DefaultTableModel model = (DefaultTableModel) tabelaUzytkownicy.getModel();
        model.setRowCount(0);
        Object[] tabela = new Object[8];
        for (int i = 0; i < lista.size(); i++) {
            tabela[0] = lista.get(i).getID();
            tabela[1] = lista.get(i).getLogin();
            tabela[2] = lista.get(i).getImie();
            tabela[3] = lista.get(i).getNazwisko();
            tabela[4] = lista.get(i).getData_rejestracji();
            tabela[5] = lista.get(i).getTyp_konta();
            if (lista.get(i).getZablokowany() == 1) {
                tabela[6] = "Tak";
            } else {
                tabela[6] = "Nie";
            }
            model.addRow(tabela);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel gradientGlowny;
    private keeptoo.KGradientPanel gradientNaglowek;
    private keeptoo.KGradientPanel gradientStopka;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pWyszukaj;
    private javax.swing.JTextField poleWyszukiwanie;
    private javax.swing.JTable tabelaUzytkownicy;
    private javax.swing.JLabel textMinimalizuj;
    private javax.swing.JLabel textNaglowek;
    private javax.swing.JLabel textStopkaL;
    private javax.swing.JLabel textStopkaP;
    private javax.swing.JLabel textWyjscie;
    // End of variables declaration//GEN-END:variables
}
