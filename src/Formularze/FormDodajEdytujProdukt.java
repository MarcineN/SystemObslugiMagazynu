/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularze;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcin
 */
public class FormDodajEdytujProdukt extends javax.swing.JFrame {

    int xMouse;
    int yMouse;
    boolean czy_edycja = false; // zmienna potrzebna do wyboru zapytania SQL INSERT czy UPDATE
    Connection con;
    JTable jt;
    FormGlowny FG;

    /**
     * Creates new form FormDodajProdukt
     */
    public FormDodajEdytujProdukt(Connection conn, FormGlowny FG) { // konstruktor do dodawania produktu
        con = conn;
        initComponents();
        this.FG = FG;
        wypelnijTyp();
        wypelnijMagazyn();
        wypelnijDostawcy();

        textStopkaL.setText(KonfiguracjaSystemu.getWersja());
        this.setLocationRelativeTo(null);
    }

    public FormDodajEdytujProdukt() {
        initComponents();
        wypelnijTyp();
        wypelnijMagazyn();
        wypelnijDostawcy();
        textStopkaL.setText(KonfiguracjaSystemu.getWersja());
        this.setLocationRelativeTo(null);
    }

    public FormDodajEdytujProdukt(Connection conn, JTable jt_, FormGlowny FG) { // konstruktor do edycji produktu
        con = conn;
        jt = jt_;
        czy_edycja = true;
        initComponents();
        this.FG = FG;
        wypelnijTyp();
        wypelnijMagazyn();
        wypelnijDostawcy();
        wypelnijDoEdycji();
        ustawNaglowekPrzycisk();
        textStopkaL.setText(KonfiguracjaSystemu.getWersja());
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientNaglowek = new keeptoo.KGradientPanel();
        textWyjscie = new javax.swing.JLabel();
        textMinimalizuj = new javax.swing.JLabel();
        textNaglowek = new javax.swing.JLabel();
        gradientStopka = new keeptoo.KGradientPanel();
        textStopkaL = new javax.swing.JLabel();
        textStopkaP = new javax.swing.JLabel();
        gradientGlowny = new keeptoo.KGradientPanel();
        textNazwa = new javax.swing.JLabel();
        poleNazwa = new javax.swing.JTextField();
        textNazwaSkr = new javax.swing.JLabel();
        poleNazwaSkr = new javax.swing.JTextField();
        textTyp = new javax.swing.JLabel();
        poleWyborTyp = new javax.swing.JComboBox<>();
        textJdm = new javax.swing.JLabel();
        poleWyborJdm = new javax.swing.JComboBox<>();
        textIlosc = new javax.swing.JLabel();
        poleIlosc = new javax.swing.JTextField();
        textMagazyn = new javax.swing.JLabel();
        poleWyborMagazyn = new javax.swing.JComboBox<>();
        textSektor = new javax.swing.JLabel();
        poleSektor = new javax.swing.JTextField();
        textDataDos = new javax.swing.JLabel();
        poleDataWyd = new javax.swing.JTextField();
        textDataWyd = new javax.swing.JLabel();
        poleDataDos = new javax.swing.JTextField();
        textDostawca = new javax.swing.JLabel();
        poleWyborDostawcy = new javax.swing.JComboBox<>();
        textCena = new javax.swing.JLabel();
        poleCena = new javax.swing.JTextField();
        przyciskData = new javax.swing.JButton();
        przyciskDodaj = new javax.swing.JButton();
        przyciskData1 = new javax.swing.JButton();
        przyciskAnuluj = new javax.swing.JButton();
        textId = new javax.swing.JLabel();
        textId2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gradientNaglowek.setkEndColor(new java.awt.Color(65, 131, 215));
        gradientNaglowek.setkGradientFocus(600);
        gradientNaglowek.setkStartColor(new java.awt.Color(58, 83, 155));
        gradientNaglowek.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                gradientNaglowekMouseDragged(evt);
            }
        });
        gradientNaglowek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gradientNaglowekMousePressed(evt);
            }
        });

        textWyjscie.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        textWyjscie.setForeground(new java.awt.Color(255, 255, 255));
        textWyjscie.setText("X");
        textWyjscie.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textWyjscie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textWyjscieMouseClicked(evt);
            }
        });

        textMinimalizuj.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        textMinimalizuj.setForeground(new java.awt.Color(255, 255, 255));
        textMinimalizuj.setText("-");
        textMinimalizuj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textMinimalizuj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textMinimalizujMouseClicked(evt);
            }
        });

        textNaglowek.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNaglowek.setForeground(new java.awt.Color(255, 255, 255));
        textNaglowek.setText("DODAWANIE PRODUKTÓW");

        javax.swing.GroupLayout gradientNaglowekLayout = new javax.swing.GroupLayout(gradientNaglowek);
        gradientNaglowek.setLayout(gradientNaglowekLayout);
        gradientNaglowekLayout.setHorizontalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientNaglowekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textNaglowek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textWyjscie)
                .addGap(21, 21, 21))
        );
        gradientNaglowekLayout.setVerticalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientNaglowekLayout.createSequentialGroup()
                .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textWyjscie)
                    .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNaglowek))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        getContentPane().add(gradientNaglowek, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 50));

        gradientStopka.setkEndColor(new java.awt.Color(98, 98, 98));
        gradientStopka.setkGradientFocus(600);
        gradientStopka.setkStartColor(new java.awt.Color(41, 59, 76));

        textStopkaL.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaL.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaL.setText(" ver. 1.0.0");
        textStopkaL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        textStopkaP.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaP.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaP.setText("Copyright © Projekt i kodowanie: Marcin Kos");
        textStopkaP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout gradientStopkaLayout = new javax.swing.GroupLayout(gradientStopka);
        gradientStopka.setLayout(gradientStopkaLayout);
        gradientStopkaLayout.setHorizontalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientStopkaLayout.createSequentialGroup()
                .addComponent(textStopkaL, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textStopkaP, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        gradientStopkaLayout.setVerticalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textStopkaL, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
            .addComponent(textStopkaP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(gradientStopka, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 460, 20));

        gradientGlowny.setkEndColor(new java.awt.Color(44, 62, 80));
        gradientGlowny.setkStartColor(new java.awt.Color(44, 62, 80));

        textNazwa.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textNazwa.setForeground(new java.awt.Color(255, 255, 255));
        textNazwa.setText("Nazwa:");

        poleNazwa.setBackground(new java.awt.Color(108, 122, 137));
        poleNazwa.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleNazwa.setForeground(new java.awt.Color(255, 255, 255));
        poleNazwa.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        textNazwaSkr.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textNazwaSkr.setForeground(new java.awt.Color(255, 255, 255));
        textNazwaSkr.setText("Nazwa skrócona:");

        poleNazwaSkr.setBackground(new java.awt.Color(108, 122, 137));
        poleNazwaSkr.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleNazwaSkr.setForeground(new java.awt.Color(255, 255, 255));
        poleNazwaSkr.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        textTyp.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textTyp.setForeground(new java.awt.Color(255, 255, 255));
        textTyp.setText("Typ:");

        poleWyborTyp.setBackground(new java.awt.Color(108, 122, 137));
        poleWyborTyp.setForeground(new java.awt.Color(108, 122, 137));

        textJdm.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textJdm.setForeground(new java.awt.Color(255, 255, 255));
        textJdm.setText("JDM:");

        poleWyborJdm.setBackground(new java.awt.Color(108, 122, 137));
        poleWyborJdm.setForeground(new java.awt.Color(108, 122, 137));
        poleWyborJdm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "szt", "kg", "l" }));

        textIlosc.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textIlosc.setForeground(new java.awt.Color(255, 255, 255));
        textIlosc.setText("Ilość:");

        poleIlosc.setBackground(new java.awt.Color(108, 122, 137));
        poleIlosc.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleIlosc.setForeground(new java.awt.Color(255, 255, 255));
        poleIlosc.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        textMagazyn.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textMagazyn.setForeground(new java.awt.Color(255, 255, 255));
        textMagazyn.setText("Magazyn:");

        poleWyborMagazyn.setBackground(new java.awt.Color(108, 122, 137));
        poleWyborMagazyn.setForeground(new java.awt.Color(108, 122, 137));

        textSektor.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textSektor.setForeground(new java.awt.Color(255, 255, 255));
        textSektor.setText("Sektor:");

        poleSektor.setBackground(new java.awt.Color(108, 122, 137));
        poleSektor.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleSektor.setForeground(new java.awt.Color(255, 255, 255));
        poleSektor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        textDataDos.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textDataDos.setForeground(new java.awt.Color(255, 255, 255));
        textDataDos.setText("Data dostawy:");

        poleDataWyd.setBackground(new java.awt.Color(108, 122, 137));
        poleDataWyd.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleDataWyd.setForeground(new java.awt.Color(255, 255, 255));
        poleDataWyd.setText("RRRR-MM-DD");
        poleDataWyd.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        textDataWyd.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textDataWyd.setForeground(new java.awt.Color(255, 255, 255));
        textDataWyd.setText("Data wydania:");

        poleDataDos.setBackground(new java.awt.Color(108, 122, 137));
        poleDataDos.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleDataDos.setForeground(new java.awt.Color(255, 255, 255));
        poleDataDos.setText("RRRR-MM-DD");
        poleDataDos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        textDostawca.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textDostawca.setForeground(new java.awt.Color(255, 255, 255));
        textDostawca.setText("Dostawca:");

        poleWyborDostawcy.setBackground(new java.awt.Color(108, 122, 137));
        poleWyborDostawcy.setForeground(new java.awt.Color(108, 122, 137));

        textCena.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textCena.setForeground(new java.awt.Color(255, 255, 255));
        textCena.setText("Cena:");

        poleCena.setBackground(new java.awt.Color(108, 122, 137));
        poleCena.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleCena.setForeground(new java.awt.Color(255, 255, 255));
        poleCena.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        przyciskData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaKalendarz.png"))); // NOI18N
        przyciskData.setBorder(null);
        przyciskData.setContentAreaFilled(false);
        przyciskData.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        przyciskData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskDataMouseClicked(evt);
            }
        });

        przyciskDodaj.setBackground(new java.awt.Color(75, 119, 190));
        przyciskDodaj.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        przyciskDodaj.setForeground(new java.awt.Color(255, 255, 255));
        przyciskDodaj.setText("Dodaj");
        przyciskDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskDodajActionPerformed(evt);
            }
        });

        przyciskData1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaKalendarz.png"))); // NOI18N
        przyciskData1.setBorder(null);
        przyciskData1.setContentAreaFilled(false);
        przyciskData1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        przyciskData1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskData1MouseClicked(evt);
            }
        });

        przyciskAnuluj.setBackground(new java.awt.Color(246, 71, 71));
        przyciskAnuluj.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        przyciskAnuluj.setForeground(new java.awt.Color(255, 255, 255));
        przyciskAnuluj.setText("Anuluj");
        przyciskAnuluj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskAnulujMouseClicked(evt);
            }
        });

        textId.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        textId.setForeground(new java.awt.Color(255, 255, 255));

        textId2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        textId2.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout gradientGlownyLayout = new javax.swing.GroupLayout(gradientGlowny);
        gradientGlowny.setLayout(gradientGlownyLayout);
        gradientGlownyLayout.setHorizontalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientGlownyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addComponent(textId2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientGlownyLayout.createSequentialGroup()
                            .addGap(159, 159, 159)
                            .addComponent(przyciskDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(przyciskAnuluj)
                            .addGap(47, 47, 47))
                        .addGroup(gradientGlownyLayout.createSequentialGroup()
                            .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(gradientGlownyLayout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(gradientGlownyLayout.createSequentialGroup()
                                            .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(textCena)
                                                .addComponent(textMagazyn)
                                                .addComponent(textSektor)
                                                .addComponent(textDataDos)
                                                .addComponent(textDataWyd)
                                                .addComponent(textDostawca)
                                                .addComponent(textIlosc))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(poleCena, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(poleSektor)
                                                .addComponent(poleDataDos)
                                                .addComponent(poleDataWyd)
                                                .addComponent(poleWyborMagazyn, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(poleIlosc)
                                                .addComponent(poleWyborDostawcy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(gradientGlownyLayout.createSequentialGroup()
                                            .addGap(73, 73, 73)
                                            .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(textTyp)
                                                .addComponent(textJdm))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(poleWyborJdm, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(poleWyborTyp, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(gradientGlownyLayout.createSequentialGroup()
                                    .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(textNazwaSkr)
                                        .addComponent(textNazwa))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(poleNazwaSkr, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                        .addComponent(poleNazwa))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(przyciskData)
                                .addComponent(przyciskData1)))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        gradientGlownyLayout.setVerticalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientGlownyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textId)
                    .addComponent(textId2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNazwa)
                    .addComponent(poleNazwa, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNazwaSkr)
                    .addComponent(poleNazwaSkr, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTyp)
                    .addComponent(poleWyborTyp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textJdm)
                    .addComponent(poleWyborJdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textIlosc)
                    .addComponent(poleIlosc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textMagazyn)
                    .addComponent(poleWyborMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSektor)
                    .addComponent(poleSektor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textDataDos)
                        .addComponent(poleDataDos, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(przyciskData, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDataWyd)
                            .addComponent(poleDataWyd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addComponent(przyciskData1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textDostawca)
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(poleWyborDostawcy, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textCena)
                    .addComponent(poleCena, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(przyciskDodaj)
                    .addComponent(przyciskAnuluj))
                .addGap(16, 16, 16))
        );

        getContentPane().add(gradientGlowny, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 460, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textWyjscieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textWyjscieMouseClicked
        FormGlowny.setEdycjaOtwarta(false);
        this.dispose();
    }//GEN-LAST:event_textWyjscieMouseClicked

    private void textMinimalizujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMinimalizujMouseClicked
        this.setState(FormDodajEdytujProdukt.ICONIFIED);
    }//GEN-LAST:event_textMinimalizujMouseClicked

    private void gradientNaglowekMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_gradientNaglowekMouseDragged

    private void gradientNaglowekMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_gradientNaglowekMousePressed

    private void przyciskDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskDodajActionPerformed

        String id = textId.getText();
        String nazwa = poleNazwa.getText();
        String nazwa_skr = poleNazwaSkr.getText();
        String typ = poleWyborTyp.getSelectedItem().toString();
        String jdm = poleWyborJdm.getSelectedItem().toString();
        String ilosc = poleIlosc.getText();
        String magazyn = poleWyborMagazyn.getSelectedItem().toString();
        String sektor = poleSektor.getText();
        String data_dos = poleDataDos.getText();
        String data_wyd = poleDataWyd.getText();
        String dostawca = poleWyborDostawcy.getSelectedItem().toString();
        String cena = poleCena.getText();

        // Walidacja danych
        //nazwa
        String bledy = "";
        WalidatorDanych WL = new WalidatorDanych();

        WL.sprawdz("Nazwa", nazwa, 4, 45);
        WL.sprawdz("Nazwa skrócona ", nazwa_skr, 4, 10);
        WL.sprawdz("Ilość", ilosc, 2, 6);
        WL.sprawdz("Sektor", sektor, 1, 6);
        WL.sprawdz("Data dostawy", data_dos, 5, 10);
        WL.sprawdz("Data wydania", data_wyd, 5, 10);
        WL.sprawdz("Cena", cena, 2, 6);

        bledy += WL.getZnalezioneBledy();

        // sprawdzanie czy wystapily bledy
        if (!bledy.equals("")) {
            JOptionPane.showMessageDialog(this, bledy, "Błąd!", 2);
            WL.usunBledy();
        }

        String[] mag = magazyn.split("-");
        String[] dos = dostawca.split("-");

        //System.out.println(nazwa + " " + nazwa_skr + " " + typ + " " + jdm + " " + ilosc + " " + mag[0] + " " + sektor + " " + data_dos + " " + data_wyd + " " + dos[0] + " " + cena);
        if (bledy.equals("")) { // walidacja poprawna
            PreparedStatement dodajp = null;
            PreparedStatement pobIdp;
            PreparedStatement pobIdt;
            PreparedStatement pobIdd;
            PreparedStatement pobIdm;
            ResultSet wynikIdp;
            ResultSet wynikIdt;
            ResultSet wynikIdd;
            ResultSet wynikIdm;
            try {
                con.setAutoCommit(false);

                String query4 = "SELECT id_t FROM typy_produktow WHERE nazwa='" + typ + "'";
                pobIdt = con.prepareStatement(query4);
                wynikIdt = pobIdt.executeQuery(query4);
                wynikIdt.next();
                int tmp2 = wynikIdt.getInt(1);
                //System.out.println("TEST id_t " + tmp2);

                String query5 = "SELECT id_d FROM dostawcy WHERE nazwa='" + dos[0] + "'";
                pobIdd = con.prepareStatement(query5);
                wynikIdd = pobIdd.executeQuery(query5);
                wynikIdd.next();
                int tmp3 = wynikIdd.getInt(1);

                //System.out.println("TEST id_d " + tmp3);
                String query1 = "INSERT INTO produkty(id_p, nazwa, nazwa_skr, jdm, ilosc, cena, id_t, id_d) VALUES (NULL,?,?,?,?,?,?,?)";
                String query7 = "UPDATE produkty SET nazwa=?, nazwa_skr=?, jdm=?, ilosc=?, cena=?, id_t=?, id_d=? WHERE id_p=?";

                if (czy_edycja) {
                    dodajp = con.prepareStatement(query7);
                    dodajp.setInt(8, Integer.parseInt(id));
                }

                if (!czy_edycja) {
                    dodajp = con.prepareStatement(query1);
                }

                dodajp.setString(1, nazwa);
                dodajp.setString(2, nazwa_skr);
                dodajp.setString(3, jdm);
                dodajp.setString(4, ilosc);
                dodajp.setString(5, cena);
                dodajp.setInt(6, tmp2);
                dodajp.setInt(7, tmp3);
                dodajp.executeUpdate();

                String query2 = "SELECT id_p FROM produkty WHERE nazwa='" + nazwa + "'";
                pobIdp = con.prepareStatement(query2);
                wynikIdp = pobIdp.executeQuery(query2);
                wynikIdp.next();
                int tmp = wynikIdp.getInt(1);
                //System.out.println("TEST ID_P" + tmp);

                String query6 = "SELECT id_m FROM magazyny WHERE nazwa='" + mag[0] + "'";
                //System.out.println(query6);
                pobIdm = con.prepareStatement(query6);
                wynikIdm = pobIdm.executeQuery(query6);
                wynikIdm.next();
                int tmp4 = wynikIdm.getInt(1);
                //System.out.println("TEST ID_M" + tmp4);

                String query3 = "INSERT INTO historia_produktow(id_p, id_m, data_dostawy, data_wydania, sektor) VALUES (?,?,?,?,?)";
                String query8 = "UPDATE historia_produktow SET id_p=?, id_m=?, data_dostawy=?, data_wydania=?, sektor=? WHERE id_p=?";

                // System.out.println(query8 + " " + Integer.parseInt(id));
                if (czy_edycja) {
                    dodajp = con.prepareStatement(query8);
                    dodajp.setInt(1, Integer.parseInt(id));
                    dodajp.setInt(6, Integer.parseInt(id));
                }
                if (!czy_edycja) {

                    dodajp = con.prepareStatement(query3);
                    dodajp.setInt(1, tmp);
                }

                dodajp.setInt(2, tmp4);
                dodajp.setString(3, data_dos);
                dodajp.setString(4, data_wyd);
                dodajp.setString(5, sektor);
                //System.out.println(dodajp);
                dodajp.executeUpdate();
                con.commit();

                this.dispose();
                FG.setEdycjaOtwarta(false);
                FG.pokaz_liste_produktow(1);

            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Wprowadzone dane sa bledne!", "Błąd!", 2);
            }
        }
    }//GEN-LAST:event_przyciskDodajActionPerformed

    private void przyciskDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskDataMouseClicked
        DateFormat df = new SimpleDateFormat("yyy-MM-dd");
        Date data = new Date();
        poleDataDos.setText(df.format(data));
    }//GEN-LAST:event_przyciskDataMouseClicked

    private void przyciskData1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskData1MouseClicked
        DateFormat df = new SimpleDateFormat("yyy-MM-dd");
        Date data = new Date();
        poleDataWyd.setText(df.format(data));
    }//GEN-LAST:event_przyciskData1MouseClicked

    private void przyciskAnulujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskAnulujMouseClicked
        poleNazwa.setText("");
        poleNazwaSkr.setText("");
        poleIlosc.setText("");
        poleWyborTyp.setSelectedIndex(0);
        poleWyborMagazyn.setSelectedIndex(0);
        poleWyborDostawcy.setSelectedIndex(0);
        poleWyborJdm.setSelectedIndex(0);
        poleDataDos.setText("RRRR-MM-DD");
        poleDataWyd.setText("RRRR-MM-DD");
        poleCena.setText("");

    }//GEN-LAST:event_przyciskAnulujMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDodajEdytujProdukt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDodajEdytujProdukt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDodajEdytujProdukt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDodajEdytujProdukt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDodajEdytujProdukt().setVisible(true);
            }
        });
    }

    public void wypelnijDoEdycji() {
        // zmieniamy format dostawcy i magazynu, w liscie rozwijanej jest Nazwa - Miasto a w tabeli tylko Nazwa

        DefaultTableModel model = (DefaultTableModel) jt.getModel();
        int wiersz = jt.getSelectedRow();

        String nazwaDos = model.getValueAt(wiersz, 10).toString();
        String nazwaDos_ = "";
        String nazwaMag = model.getValueAt(wiersz, 6).toString();
        String nazwaMag_ = "";

        try {
            PreparedStatement pobDos = con.prepareStatement("SELECT miasto FROM dostawcy WHERE nazwa= '" + nazwaDos + "'");
            ResultSet wynikDos = pobDos.executeQuery();
            wynikDos.next();
            nazwaDos_ = nazwaDos + " - " + wynikDos.getString(1);
            PreparedStatement pobMag = con.prepareStatement("SELECT miasto FROM magazyny WHERE nazwa= '" + nazwaMag + "'");
            ResultSet wynikMag = pobMag.executeQuery();
            wynikMag.next();
            nazwaMag_ = nazwaMag + " - " + wynikMag.getString(1);
        } catch (SQLException ex) {
            Logger.getLogger(FormDodajEdytujProdukt.class.getName()).log(Level.SEVERE, null, ex);
        }
        //String ilosc = model.getValueAt(wiersz, 5).toString();
        //ilosc = ilosc.substring(ilosc.length(),ilosc.length()-1);

        textId2.setText("ID: ");
        textId.setText(model.getValueAt(wiersz, 0).toString());
        poleNazwa.setText(model.getValueAt(wiersz, 1).toString());
        poleNazwaSkr.setText(model.getValueAt(wiersz, 2).toString());
        poleWyborTyp.setSelectedItem(model.getValueAt(wiersz, 3).toString());
        poleWyborJdm.setSelectedItem(model.getValueAt(wiersz, 4).toString());
        poleIlosc.setText(model.getValueAt(wiersz, 5).toString());
        poleWyborMagazyn.setSelectedItem(nazwaMag_);
        poleSektor.setText(model.getValueAt(wiersz, 7).toString());
        poleDataDos.setText(model.getValueAt(wiersz, 8).toString());
        poleDataWyd.setText(model.getValueAt(wiersz, 9).toString());
        poleWyborDostawcy.setSelectedItem(nazwaDos_);
        poleCena.setText(model.getValueAt(wiersz, 11).toString().replaceAll("zł", ""));

        //TODO: Odswiezanie tabeli po edycji rekordu
        //TODO: Sprawdzanie czy sektor nie jest wiekszy od max ilosci
    }

    public void wypelnijTyp() {
        try {
            PreparedStatement pobierzTyp;
            ResultSet wynikTyp;
            String query = "SELECT nazwa FROM typy_produktow";

            pobierzTyp = con.prepareStatement(query);
            wynikTyp = pobierzTyp.executeQuery(query);

            while (wynikTyp.next()) {
                poleWyborTyp.addItem(wynikTyp.getString(1));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }
    }

    public void wypelnijMagazyn() {
        try {
            PreparedStatement pobierzMagazyn;
            ResultSet wynikMagazyn;
            String query = "SELECT nazwa,miasto FROM magazyny WHERE zablokowany=0 AND usuniety=0";

            pobierzMagazyn = con.prepareStatement(query);
            wynikMagazyn = pobierzMagazyn.executeQuery(query);

            while (wynikMagazyn.next()) {
                poleWyborMagazyn.addItem(wynikMagazyn.getString(1) + " - " + wynikMagazyn.getString(2));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }
    }

    public void wypelnijDostawcy() {
        try {
            PreparedStatement pobierzDostawcy;
            ResultSet wynikDostawcy;
            String query = "SELECT nazwa,miasto FROM dostawcy WHERE zablokowany=0";

            pobierzDostawcy = con.prepareStatement(query);
            wynikDostawcy = pobierzDostawcy.executeQuery(query);

            while (wynikDostawcy.next()) {
                poleWyborDostawcy.addItem(wynikDostawcy.getString(1) + " - " + wynikDostawcy.getString(2));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }
    }

    public void ustawNaglowekPrzycisk() {
        textNaglowek.setText("EDYTOWANIE PRODUKTU");
        przyciskDodaj.setText("Edytuj");

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel gradientGlowny;
    private keeptoo.KGradientPanel gradientNaglowek;
    private keeptoo.KGradientPanel gradientStopka;
    private javax.swing.JTextField poleCena;
    private javax.swing.JTextField poleDataDos;
    private javax.swing.JTextField poleDataWyd;
    private javax.swing.JTextField poleIlosc;
    private javax.swing.JTextField poleNazwa;
    private javax.swing.JTextField poleNazwaSkr;
    private javax.swing.JTextField poleSektor;
    private javax.swing.JComboBox<String> poleWyborDostawcy;
    private javax.swing.JComboBox<String> poleWyborJdm;
    private javax.swing.JComboBox<String> poleWyborMagazyn;
    private javax.swing.JComboBox<String> poleWyborTyp;
    private javax.swing.JButton przyciskAnuluj;
    private javax.swing.JButton przyciskData;
    private javax.swing.JButton przyciskData1;
    private javax.swing.JButton przyciskDodaj;
    private javax.swing.JLabel textCena;
    private javax.swing.JLabel textDataDos;
    private javax.swing.JLabel textDataWyd;
    private javax.swing.JLabel textDostawca;
    private javax.swing.JLabel textId;
    private javax.swing.JLabel textId2;
    private javax.swing.JLabel textIlosc;
    private javax.swing.JLabel textJdm;
    private javax.swing.JLabel textMagazyn;
    private javax.swing.JLabel textMinimalizuj;
    private javax.swing.JLabel textNaglowek;
    private javax.swing.JLabel textNazwa;
    private javax.swing.JLabel textNazwaSkr;
    private javax.swing.JLabel textSektor;
    private javax.swing.JLabel textStopkaL;
    private javax.swing.JLabel textStopkaP;
    private javax.swing.JLabel textTyp;
    private javax.swing.JLabel textWyjscie;
    // End of variables declaration//GEN-END:variables
}
