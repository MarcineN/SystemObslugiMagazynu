/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularze;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
//import net.sf.jasperreports.engine.JRException;
//import net.sf.jasperreports.engine.JasperCompileManager;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.engine.JasperReport;
//import net.sf.jasperreports.engine.design.JasperDesign;
//import net.sf.jasperreports.engine.xml.JRXmlLoader;
//import net.sf.jasperreports.view.JasperViewer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Marcin
 */
public class FormGlowny extends javax.swing.JFrame {

    int xMouse;
    int yMouse;
    static boolean edycja_otwarta = false;
    static Connection con;
    private static Uzytkownik daneUzytk;
    private KonfiguracjaSystemu KS;

    /**
     * Creates new form FormGlowny
     */
    public FormGlowny(Connection conn) {
        initComponents();
        this.setLocationRelativeTo(null);
        con = conn;
    }

    public FormGlowny() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientNaglowek = new keeptoo.KGradientPanel();
        textWyjscie = new javax.swing.JLabel();
        textMinimalizuj = new javax.swing.JLabel();
        textNaglowek = new javax.swing.JLabel();
        przyciskDom = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        przyciskOpcje = new javax.swing.JButton();
        przyciskAdmin = new javax.swing.JButton();
        textUzytkownik = new javax.swing.JLabel();
        gradientStopka = new keeptoo.KGradientPanel();
        textStopkaL = new javax.swing.JLabel();
        textStopkaP = new javax.swing.JLabel();
        gradientGlowny = new keeptoo.KGradientPanel();
        panelStartowy = new javax.swing.JPanel();
        pListaProduktow = new javax.swing.JButton();
        pListaMagazynow = new javax.swing.JButton();
        pListaDostawcow = new javax.swing.JButton();
        pHistoriaProduktow = new javax.swing.JButton();
        pDokumenty = new javax.swing.JButton();
        pStatystyki = new javax.swing.JButton();
        pOpcje = new javax.swing.JButton();
        pWyloguj = new javax.swing.JButton();
        poleLogo = new javax.swing.JLabel();
        textOpisSystemu = new javax.swing.JLabel();
        poleOgloszenia = new javax.swing.JLabel();
        poleNazwaFirmy = new javax.swing.JLabel();
        panelProdukty = new javax.swing.JPanel();
        pDodajProdukt = new javax.swing.JButton();
        pUsunProdukt = new javax.swing.JButton();
        pEdytujProdukt = new javax.swing.JButton();
        poleWyszukiwanie = new javax.swing.JTextField();
        pWyszukaj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdukty = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        panelMagazyny = new javax.swing.JPanel();
        pDodajMagazyn = new javax.swing.JButton();
        pUsunPrzywrocMagazyn = new javax.swing.JButton();
        pEdytujMagazyn = new javax.swing.JButton();
        pZablokujOdblokujMagazyn = new javax.swing.JButton();
        poleWyszukiwanie1 = new javax.swing.JTextField();
        pWyszukaj1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaMagazyny = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        panelDostawcy = new javax.swing.JPanel();
        pDodajDostawce = new javax.swing.JButton();
        pZablokujOdblokujDostawce = new javax.swing.JButton();
        pEdytujDostawce = new javax.swing.JButton();
        poleWyszukiwanie2 = new javax.swing.JTextField();
        pWyszukaj2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaDostawcy = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        panelHistoria = new javax.swing.JPanel();
        pPrzywrocProdukt = new javax.swing.JButton();
        poleWyszukiwanie3 = new javax.swing.JTextField();
        pWyszukaj3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaHistoria = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        panelStatystyki = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        wykresObsz = new javax.swing.JPanel();
        poleProgresBar = new javax.swing.JLabel();
        wykresSlup = new javax.swing.JPanel();
        poleProgresBar2 = new javax.swing.JLabel();
        tloStatystyki = new javax.swing.JPanel();
        textProdStan = new javax.swing.JLabel();
        poleProdStan = new javax.swing.JLabel();
        textProdArchiw = new javax.swing.JLabel();
        poleProdArchiw = new javax.swing.JLabel();
        textProdTyp = new javax.swing.JLabel();
        poleProdTyp = new javax.swing.JLabel();
        textMagazyny = new javax.swing.JLabel();
        poleMagazyny = new javax.swing.JLabel();
        textSekt = new javax.swing.JLabel();
        poleSekt = new javax.swing.JLabel();
        textDostawcy = new javax.swing.JLabel();
        poleDostawcy = new javax.swing.JLabel();
        textOdbiorcy = new javax.swing.JLabel();
        poleOdbiorcy = new javax.swing.JLabel();
        textFaktury = new javax.swing.JLabel();
        poleFaktury = new javax.swing.JLabel();
        textUzytk = new javax.swing.JLabel();
        poleUzytk = new javax.swing.JLabel();
        textNajlepszyMag = new javax.swing.JLabel();
        poleNajlepszyMag = new javax.swing.JLabel();
        textNajlepszyDostawca = new javax.swing.JLabel();
        poleNajlepszyDostawca = new javax.swing.JLabel();
        textNajlepszyProdukt = new javax.swing.JLabel();
        poleNajlepszyProdukt = new javax.swing.JLabel();
        panelDokumenty = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaDokumenty = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        podgladDokumentu = new javax.swing.JTextArea();
        pDodajDokument = new javax.swing.JButton();
        pDodajDokument1 = new javax.swing.JButton();
        panelOpcje = new javax.swing.JPanel();
        OpcjeStart = new javax.swing.JPanel();
        tloDane = new javax.swing.JPanel();
        textNazwaUzytk = new javax.swing.JLabel();
        poleNazwaUzytk = new javax.swing.JLabel();
        textTypKonta = new javax.swing.JLabel();
        poleTypKonta = new javax.swing.JLabel();
        textDataRej = new javax.swing.JLabel();
        poleDataRej = new javax.swing.JLabel();
        textSesja = new javax.swing.JLabel();
        poleSesja = new javax.swing.JLabel();
        textStatus = new javax.swing.JLabel();
        poleStatus = new javax.swing.JLabel();
        textImie = new javax.swing.JLabel();
        poleImie = new javax.swing.JLabel();
        textNazwisko = new javax.swing.JLabel();
        poleNazwisko = new javax.swing.JLabel();
        pZmienHaslo = new javax.swing.JButton();
        pZmienLogin = new javax.swing.JButton();
        pZglosBlad = new javax.swing.JButton();
        pNotatki = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        panelOpcjeAdmin = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaBledy = new javax.swing.JTable()
        {
            @Override public Component prepareRenderer (TableCellRenderer renderer, int rowIndex, int columnIndex){
                Component componenet = super.prepareRenderer(renderer, rowIndex, columnIndex);
                Object value = getModel().getValueAt(rowIndex,columnIndex);
                if(value!=null){
                    if(columnIndex==5 ){
                        if(value.equals("Nierozpatrzony")){
                            // componenet.setBackground(Color.BLUE);
                            //componenet.setForeground(Color.BLACK);
                        } if(value.equals("Rozpatrzony")){ // if date equal current date
                            // componenet.setBackground(new java.awt.Color(3,166,120));
                            componenet.setForeground(new java.awt.Color(3,166,120));
                        } if(value.equals("Neutralny")){ // if date equal current date
                            //componenet.setBackground(new java.awt.Color(75,119,190));
                            componenet.setForeground(new java.awt.Color(75,119,190));
                        } if(value.equals("Priorytetowy")){ // if date equal current date
                            // componenet.setBackground(new java.awt.Color(246,71,71));
                            componenet.setForeground(new java.awt.Color(246,71,71));
                        }
                    }
                    else if(columnIndex!=4){
                        //componenet.setBackground(Color.WHITE);
                        componenet.setForeground(new java.awt.Color(108,122,137));
                    }
                }
                return componenet;
            }
        }

        ;
        tloPrzyciskiTabela = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        pPriorytetowy = new javax.swing.JButton();
        pNeutralny = new javax.swing.JButton();
        pRozpatrzony = new javax.swing.JButton();
        wykresSlupAdmin = new javax.swing.JPanel();
        poleProgresBar3 = new javax.swing.JLabel();
        pZamknijSystem = new javax.swing.JButton();
        pDodajUzytk = new javax.swing.JButton();
        pEdytujUzytk = new javax.swing.JButton();
        pKonfiguracja = new javax.swing.JButton();
        tloDane2 = new javax.swing.JPanel();
        textAktywniUzytk = new javax.swing.JLabel();
        poleAktywniUzytk = new javax.swing.JLabel();
        textStatusSys = new javax.swing.JLabel();
        poleStatusSys = new javax.swing.JLabel();
        textIloscKont = new javax.swing.JLabel();
        poleIloscKont = new javax.swing.JLabel();
        textWiadomosc = new javax.swing.JLabel();
        poleWiadomosc = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gradientNaglowek.setkEndColor(new java.awt.Color(65, 131, 215));
        gradientNaglowek.setkGradientFocus(600);
        gradientNaglowek.setkStartColor(new java.awt.Color(58, 83, 155));
        gradientNaglowek.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                gradientNaglowekMouseDragged(evt);
            }
        });
        gradientNaglowek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gradientNaglowekMousePressed(evt);
            }
        });

        textWyjscie.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        textWyjscie.setForeground(new java.awt.Color(255, 255, 255));
        textWyjscie.setText("X");
        textWyjscie.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textWyjscie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textWyjscieMouseClicked(evt);
            }
        });

        textMinimalizuj.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        textMinimalizuj.setForeground(new java.awt.Color(255, 255, 255));
        textMinimalizuj.setText("-");
        textMinimalizuj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textMinimalizuj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textMinimalizujMouseClicked(evt);
            }
        });

        textNaglowek.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNaglowek.setForeground(new java.awt.Color(255, 255, 255));
        textNaglowek.setText("ZALOGOWANO JAKO:");

        przyciskDom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaDom.png"))); // NOI18N
        przyciskDom.setBorder(null);
        przyciskDom.setContentAreaFilled(false);
        przyciskDom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        przyciskDom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskDomMouseClicked(evt);
            }
        });
        przyciskDom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskDomActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        przyciskOpcje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        przyciskOpcje.setBorder(null);
        przyciskOpcje.setContentAreaFilled(false);
        przyciskOpcje.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        przyciskOpcje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskOpcjeMouseClicked(evt);
            }
        });

        przyciskAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaAdmin.png"))); // NOI18N
        przyciskAdmin.setBorder(null);
        przyciskAdmin.setContentAreaFilled(false);
        przyciskAdmin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        przyciskAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskAdminMouseClicked(evt);
            }
        });

        textUzytkownik.setFont(new java.awt.Font("Dialog", 2, 16)); // NOI18N
        textUzytkownik.setForeground(new java.awt.Color(204, 204, 204));
        textUzytkownik.setText("nazwa_uzytkownika");

        javax.swing.GroupLayout gradientNaglowekLayout = new javax.swing.GroupLayout(gradientNaglowek);
        gradientNaglowek.setLayout(gradientNaglowekLayout);
        gradientNaglowekLayout.setHorizontalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientNaglowekLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(przyciskDom, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(textNaglowek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textUzytkownik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 548, Short.MAX_VALUE)
                .addComponent(przyciskAdmin)
                .addGap(18, 18, 18)
                .addComponent(przyciskOpcje)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textWyjscie)
                .addGap(21, 21, 21))
        );
        gradientNaglowekLayout.setVerticalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(przyciskOpcje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(przyciskAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(gradientNaglowekLayout.createSequentialGroup()
                .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textWyjscie)
                    .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(gradientNaglowekLayout.createSequentialGroup()
                .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientNaglowekLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(przyciskDom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(gradientNaglowekLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNaglowek, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(textUzytkownik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        getContentPane().add(gradientNaglowek, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 50));

        gradientStopka.setkEndColor(new java.awt.Color(98, 98, 98));
        gradientStopka.setkGradientFocus(600);
        gradientStopka.setkStartColor(new java.awt.Color(41, 59, 76));

        textStopkaL.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaL.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaL.setText("System zarządzania i kontrolowania zawartości magazynów ver. 1.0.0");
        textStopkaL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        textStopkaP.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaP.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaP.setText("Copyright © Projekt i kodowanie: Marcin Kos");
        textStopkaP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout gradientStopkaLayout = new javax.swing.GroupLayout(gradientStopka);
        gradientStopka.setLayout(gradientStopkaLayout);
        gradientStopkaLayout.setHorizontalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientStopkaLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(textStopkaL, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 463, Short.MAX_VALUE)
                .addComponent(textStopkaP, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        gradientStopkaLayout.setVerticalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textStopkaL, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
            .addComponent(textStopkaP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(gradientStopka, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 590, 1100, 20));

        gradientGlowny.setBackground(new java.awt.Color(44, 62, 80));
        gradientGlowny.setkEndColor(new java.awt.Color(44, 62, 80));
        gradientGlowny.setkStartColor(new java.awt.Color(44, 62, 80));
        gradientGlowny.setOpaque(false);
        gradientGlowny.setLayout(new java.awt.CardLayout());

        panelStartowy.setBackground(new java.awt.Color(44, 62, 80));
        panelStartowy.setMinimumSize(new java.awt.Dimension(1048, 480));
        panelStartowy.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pListaProduktow.setBackground(new java.awt.Color(75, 119, 190));
        pListaProduktow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pListaProduktow.setForeground(new java.awt.Color(255, 255, 255));
        pListaProduktow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaProdukty.png"))); // NOI18N
        pListaProduktow.setText("  Lista produktów");
        pListaProduktow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pListaProduktow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pListaProduktowMouseClicked(evt);
            }
        });
        pListaProduktow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pListaProduktowActionPerformed(evt);
            }
        });
        panelStartowy.add(pListaProduktow, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 190, 60));

        pListaMagazynow.setBackground(new java.awt.Color(75, 119, 190));
        pListaMagazynow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pListaMagazynow.setForeground(new java.awt.Color(255, 255, 255));
        pListaMagazynow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaMagazyn.png"))); // NOI18N
        pListaMagazynow.setText("  Lista magazynów");
        pListaMagazynow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pListaMagazynow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pListaMagazynowMouseClicked(evt);
            }
        });
        panelStartowy.add(pListaMagazynow, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 80, 200, 60));

        pListaDostawcow.setBackground(new java.awt.Color(75, 119, 190));
        pListaDostawcow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pListaDostawcow.setForeground(new java.awt.Color(255, 255, 255));
        pListaDostawcow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaDostawca.png"))); // NOI18N
        pListaDostawcow.setText("  Lista dostawców");
        pListaDostawcow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pListaDostawcow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pListaDostawcowMouseClicked(evt);
            }
        });
        pListaDostawcow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pListaDostawcowActionPerformed(evt);
            }
        });
        panelStartowy.add(pListaDostawcow, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 180, 190, 60));

        pHistoriaProduktow.setBackground(new java.awt.Color(75, 119, 190));
        pHistoriaProduktow.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pHistoriaProduktow.setForeground(new java.awt.Color(255, 255, 255));
        pHistoriaProduktow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaNabywca.png"))); // NOI18N
        pHistoriaProduktow.setText(" Historia produktów");
        pHistoriaProduktow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pHistoriaProduktow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pHistoriaProduktowMouseClicked(evt);
            }
        });
        panelStartowy.add(pHistoriaProduktow, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 180, 200, 60));

        pDokumenty.setBackground(new java.awt.Color(75, 119, 190));
        pDokumenty.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pDokumenty.setForeground(new java.awt.Color(255, 255, 255));
        pDokumenty.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonyFaktury.png"))); // NOI18N
        pDokumenty.setText("  PZ / WW / PW");
        pDokumenty.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pDokumenty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDokumentyMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pDokumentyMouseEntered(evt);
            }
        });
        panelStartowy.add(pDokumenty, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 190, 60));

        pStatystyki.setBackground(new java.awt.Color(75, 119, 190));
        pStatystyki.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pStatystyki.setForeground(new java.awt.Color(255, 255, 255));
        pStatystyki.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaStatystyki.png"))); // NOI18N
        pStatystyki.setText("  Statystyki");
        pStatystyki.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pStatystyki.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pStatystykiMouseClicked(evt);
            }
        });
        panelStartowy.add(pStatystyki, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 280, 200, 60));

        pOpcje.setBackground(new java.awt.Color(75, 119, 190));
        pOpcje.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pOpcje.setForeground(new java.awt.Color(255, 255, 255));
        pOpcje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pOpcje.setText("  Ustawienia");
        pOpcje.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pOpcje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pOpcjeMouseClicked(evt);
            }
        });
        panelStartowy.add(pOpcje, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 380, 190, 60));

        pWyloguj.setBackground(new java.awt.Color(246, 71, 71));
        pWyloguj.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pWyloguj.setForeground(new java.awt.Color(255, 255, 255));
        pWyloguj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaWyloguj.png"))); // NOI18N
        pWyloguj.setText("  Wyloguj");
        pWyloguj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pWyloguj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pWylogujMouseClicked(evt);
            }
        });
        pWyloguj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pWylogujActionPerformed(evt);
            }
        });
        panelStartowy.add(pWyloguj, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 380, 200, 60));

        poleLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/logoSystemu.png"))); // NOI18N
        panelStartowy.add(poleLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 290, 290));

        textOpisSystemu.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        textOpisSystemu.setForeground(new java.awt.Color(255, 255, 255));
        textOpisSystemu.setText("Wiadomość powitalna");
        panelStartowy.add(textOpisSystemu, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 480, 80));

        poleOgloszenia.setBackground(java.awt.Color.orange);
        poleOgloszenia.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleOgloszenia.setForeground(new java.awt.Color(246, 71, 71));
        poleOgloszenia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelStartowy.add(poleOgloszenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 970, 20));

        poleNazwaFirmy.setFont(new java.awt.Font("Dialog", 3, 12)); // NOI18N
        poleNazwaFirmy.setForeground(new java.awt.Color(255, 255, 255));
        poleNazwaFirmy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        poleNazwaFirmy.setText("nazwa_firmy");
        panelStartowy.add(poleNazwaFirmy, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 450, 470, -1));

        gradientGlowny.add(panelStartowy, "card2");

        panelProdukty.setBackground(new java.awt.Color(44, 62, 80));

        pDodajProdukt.setBackground(new java.awt.Color(43, 87, 157));
        pDodajProdukt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pDodajProdukt.setForeground(new java.awt.Color(255, 255, 255));
        pDodajProdukt.setText("Dodaj produkt");
        pDodajProdukt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pDodajProdukt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDodajProduktMouseClicked(evt);
            }
        });

        pUsunProdukt.setBackground(new java.awt.Color(43, 87, 157));
        pUsunProdukt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pUsunProdukt.setForeground(new java.awt.Color(255, 255, 255));
        pUsunProdukt.setText("Usun produkt");
        pUsunProdukt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pUsunProdukt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pUsunProduktMouseClicked(evt);
            }
        });

        pEdytujProdukt.setBackground(new java.awt.Color(43, 87, 157));
        pEdytujProdukt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pEdytujProdukt.setForeground(new java.awt.Color(255, 255, 255));
        pEdytujProdukt.setText("Edytuj produkt");
        pEdytujProdukt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pEdytujProdukt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pEdytujProduktMouseClicked(evt);
            }
        });

        poleWyszukiwanie.setBackground(new java.awt.Color(108, 122, 137));
        poleWyszukiwanie.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleWyszukiwanie.setForeground(new java.awt.Color(255, 255, 255));
        poleWyszukiwanie.setToolTipText("");
        poleWyszukiwanie.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));
        poleWyszukiwanie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                poleWyszukiwanieKeyPressed(evt);
            }
        });

        pWyszukaj.setBackground(new java.awt.Color(43, 87, 157));
        pWyszukaj.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pWyszukaj.setForeground(new java.awt.Color(255, 255, 255));
        pWyszukaj.setText("Szukaj");
        pWyszukaj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pWyszukaj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pWyszukajMouseClicked(evt);
            }
        });
        pWyszukaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pWyszukajActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        tabelaProdukty.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabelaProdukty.setForeground(new java.awt.Color(108, 122, 137));
        tabelaProdukty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa produktu", "Skrót", "Typ produktu", "JDM", "Ilość", "Magazyn", "Sektor", "Data dostawy", "Data wydania", "Dostawca", "Cena"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaProdukty.setToolTipText("");
        tabelaProdukty.setDragEnabled(true);
        tabelaProdukty.setSelectionBackground(new java.awt.Color(43, 87, 157));
        tabelaProdukty.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(tabelaProdukty);
        if (tabelaProdukty.getColumnModel().getColumnCount() > 0) {
            tabelaProdukty.getColumnModel().getColumn(0).setPreferredWidth(2);
            tabelaProdukty.getColumnModel().getColumn(2).setPreferredWidth(20);
            tabelaProdukty.getColumnModel().getColumn(4).setPreferredWidth(15);
            tabelaProdukty.getColumnModel().getColumn(5).setPreferredWidth(15);
            tabelaProdukty.getColumnModel().getColumn(7).setResizable(false);
            tabelaProdukty.getColumnModel().getColumn(7).setPreferredWidth(20);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(">> LISTA PRODUKTÓW");

        javax.swing.GroupLayout panelProduktyLayout = new javax.swing.GroupLayout(panelProdukty);
        panelProdukty.setLayout(panelProduktyLayout);
        panelProduktyLayout.setHorizontalGroup(
            panelProduktyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProduktyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProduktyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1076, Short.MAX_VALUE)
                    .addGroup(panelProduktyLayout.createSequentialGroup()
                        .addComponent(poleWyszukiwanie)
                        .addGap(17, 17, 17)
                        .addComponent(pWyszukaj, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelProduktyLayout.createSequentialGroup()
                        .addGroup(panelProduktyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelProduktyLayout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(pDodajProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)
                                .addComponent(pUsunProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addComponent(pEdytujProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelProduktyLayout.setVerticalGroup(
            panelProduktyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProduktyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProduktyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pDodajProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pUsunProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pEdytujProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelProduktyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poleWyszukiwanie, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pWyszukaj))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        poleWyszukiwanie.getAccessibleContext().setAccessibleName("");

        gradientGlowny.add(panelProdukty, "card3");

        panelMagazyny.setBackground(new java.awt.Color(44, 62, 80));

        pDodajMagazyn.setBackground(new java.awt.Color(43, 87, 157));
        pDodajMagazyn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pDodajMagazyn.setForeground(new java.awt.Color(255, 255, 255));
        pDodajMagazyn.setText("Dodaj magazyn");
        pDodajMagazyn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pDodajMagazyn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDodajMagazynMouseClicked(evt);
            }
        });
        pDodajMagazyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDodajMagazynActionPerformed(evt);
            }
        });

        pUsunPrzywrocMagazyn.setBackground(new java.awt.Color(43, 87, 157));
        pUsunPrzywrocMagazyn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pUsunPrzywrocMagazyn.setForeground(new java.awt.Color(255, 255, 255));
        pUsunPrzywrocMagazyn.setText("Usun / Przywróć magazyn");
        pUsunPrzywrocMagazyn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pUsunPrzywrocMagazyn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pUsunPrzywrocMagazynMouseClicked(evt);
            }
        });

        pEdytujMagazyn.setBackground(new java.awt.Color(43, 87, 157));
        pEdytujMagazyn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pEdytujMagazyn.setForeground(new java.awt.Color(255, 255, 255));
        pEdytujMagazyn.setText("Edytuj magazyn");
        pEdytujMagazyn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pEdytujMagazyn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pEdytujMagazynMouseClicked(evt);
            }
        });

        pZablokujOdblokujMagazyn.setBackground(new java.awt.Color(43, 87, 157));
        pZablokujOdblokujMagazyn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pZablokujOdblokujMagazyn.setForeground(new java.awt.Color(255, 255, 255));
        pZablokujOdblokujMagazyn.setText("Zablokuj / Odblokuj magazyn");
        pZablokujOdblokujMagazyn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pZablokujOdblokujMagazyn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pZablokujOdblokujMagazynMouseClicked(evt);
            }
        });

        poleWyszukiwanie1.setBackground(new java.awt.Color(108, 122, 137));
        poleWyszukiwanie1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleWyszukiwanie1.setForeground(new java.awt.Color(255, 255, 255));
        poleWyszukiwanie1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        pWyszukaj1.setBackground(new java.awt.Color(43, 87, 157));
        pWyszukaj1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pWyszukaj1.setForeground(new java.awt.Color(255, 255, 255));
        pWyszukaj1.setText("Szukaj");
        pWyszukaj1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pWyszukaj1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pWyszukaj1MouseClicked(evt);
            }
        });
        pWyszukaj1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pWyszukaj1ActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(null);

        tabelaMagazyny.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabelaMagazyny.setForeground(new java.awt.Color(108, 122, 137));
        tabelaMagazyny.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa", "Ulica", "Miasto", "Województwo", "Kod pocztowy", "Ilość sektorów", "Zablokowany", "Usuniety"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaMagazyny.setDragEnabled(true);
        tabelaMagazyny.setSelectionBackground(new java.awt.Color(43, 87, 157));
        tabelaMagazyny.setUpdateSelectionOnSort(false);
        jScrollPane2.setViewportView(tabelaMagazyny);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(">> LISTA MAGAZYNÓW");

        javax.swing.GroupLayout panelMagazynyLayout = new javax.swing.GroupLayout(panelMagazyny);
        panelMagazyny.setLayout(panelMagazynyLayout);
        panelMagazynyLayout.setHorizontalGroup(
            panelMagazynyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMagazynyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMagazynyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(panelMagazynyLayout.createSequentialGroup()
                        .addComponent(poleWyszukiwanie1)
                        .addGap(17, 17, 17)
                        .addComponent(pWyszukaj1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMagazynyLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panelMagazynyLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(pDodajMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(pUsunPrzywrocMagazyn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44)
                .addComponent(pEdytujMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(pZablokujOdblokujMagazyn)
                .addGap(117, 117, 117))
        );
        panelMagazynyLayout.setVerticalGroup(
            panelMagazynyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMagazynyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(13, 13, 13)
                .addGroup(panelMagazynyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pDodajMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pUsunPrzywrocMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pEdytujMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pZablokujOdblokujMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMagazynyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poleWyszukiwanie1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pWyszukaj1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        gradientGlowny.add(panelMagazyny, "card4");

        panelDostawcy.setBackground(new java.awt.Color(44, 62, 80));
        panelDostawcy.setForeground(new java.awt.Color(108, 122, 137));

        pDodajDostawce.setBackground(new java.awt.Color(43, 87, 157));
        pDodajDostawce.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pDodajDostawce.setForeground(new java.awt.Color(255, 255, 255));
        pDodajDostawce.setText("Dodaj dostawcę");
        pDodajDostawce.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pDodajDostawce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDodajDostawceMouseClicked(evt);
            }
        });

        pZablokujOdblokujDostawce.setBackground(new java.awt.Color(43, 87, 157));
        pZablokujOdblokujDostawce.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pZablokujOdblokujDostawce.setForeground(new java.awt.Color(255, 255, 255));
        pZablokujOdblokujDostawce.setText("Zablokuj / Odblokuj dostawcę");
        pZablokujOdblokujDostawce.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pZablokujOdblokujDostawce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pZablokujOdblokujDostawceMouseClicked(evt);
            }
        });
        pZablokujOdblokujDostawce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pZablokujOdblokujDostawceActionPerformed(evt);
            }
        });

        pEdytujDostawce.setBackground(new java.awt.Color(43, 87, 157));
        pEdytujDostawce.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pEdytujDostawce.setForeground(new java.awt.Color(255, 255, 255));
        pEdytujDostawce.setText("Edytuj dostawcę");
        pEdytujDostawce.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pEdytujDostawce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pEdytujDostawceMouseClicked(evt);
            }
        });

        poleWyszukiwanie2.setBackground(new java.awt.Color(108, 122, 137));
        poleWyszukiwanie2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleWyszukiwanie2.setForeground(new java.awt.Color(255, 255, 255));
        poleWyszukiwanie2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        pWyszukaj2.setBackground(new java.awt.Color(43, 87, 157));
        pWyszukaj2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pWyszukaj2.setForeground(new java.awt.Color(255, 255, 255));
        pWyszukaj2.setText("Szukaj");
        pWyszukaj2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pWyszukaj2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pWyszukaj2MouseClicked(evt);
            }
        });
        pWyszukaj2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pWyszukaj2ActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(null);

        tabelaDostawcy.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabelaDostawcy.setForeground(new java.awt.Color(108, 122, 137));
        tabelaDostawcy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa", "Ulica", "Miasto", "Kod pocztowy", "Województwo", "NIP", "Ilość produktów", "Zablokowany"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDostawcy.setDragEnabled(true);
        tabelaDostawcy.setSelectionBackground(new java.awt.Color(43, 87, 157));
        tabelaDostawcy.setUpdateSelectionOnSort(false);
        jScrollPane3.setViewportView(tabelaDostawcy);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(">> LISTA DOSTAWCÓW");

        javax.swing.GroupLayout panelDostawcyLayout = new javax.swing.GroupLayout(panelDostawcy);
        panelDostawcy.setLayout(panelDostawcyLayout);
        panelDostawcyLayout.setHorizontalGroup(
            panelDostawcyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDostawcyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDostawcyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1076, Short.MAX_VALUE)
                    .addGroup(panelDostawcyLayout.createSequentialGroup()
                        .addComponent(poleWyszukiwanie2)
                        .addGap(17, 17, 17)
                        .addComponent(pWyszukaj2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDostawcyLayout.createSequentialGroup()
                        .addGroup(panelDostawcyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDostawcyLayout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(pDodajDostawce, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(pZablokujOdblokujDostawce, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(pEdytujDostawce, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDostawcyLayout.setVerticalGroup(
            panelDostawcyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDostawcyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDostawcyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pDodajDostawce, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pZablokujOdblokujDostawce, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pEdytujDostawce, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDostawcyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poleWyszukiwanie2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pWyszukaj2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gradientGlowny.add(panelDostawcy, "card5");

        panelHistoria.setBackground(new java.awt.Color(44, 62, 80));

        pPrzywrocProdukt.setBackground(new java.awt.Color(43, 87, 157));
        pPrzywrocProdukt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pPrzywrocProdukt.setForeground(new java.awt.Color(255, 255, 255));
        pPrzywrocProdukt.setText("Przywróć produkt");
        pPrzywrocProdukt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pPrzywrocProdukt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pPrzywrocProduktMouseClicked(evt);
            }
        });
        pPrzywrocProdukt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pPrzywrocProduktActionPerformed(evt);
            }
        });

        poleWyszukiwanie3.setBackground(new java.awt.Color(108, 122, 137));
        poleWyszukiwanie3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        poleWyszukiwanie3.setForeground(new java.awt.Color(255, 255, 255));
        poleWyszukiwanie3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        pWyszukaj3.setBackground(new java.awt.Color(43, 87, 157));
        pWyszukaj3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pWyszukaj3.setForeground(new java.awt.Color(255, 255, 255));
        pWyszukaj3.setText("Szukaj");
        pWyszukaj3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pWyszukaj3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pWyszukaj3MouseClicked(evt);
            }
        });
        pWyszukaj3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pWyszukaj3ActionPerformed(evt);
            }
        });

        jScrollPane4.setBorder(null);

        tabelaHistoria.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabelaHistoria.setForeground(new java.awt.Color(108, 122, 137));
        tabelaHistoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa produktu", "Skrót", "Typ produktu", "JDM", "Ilość", "Magazyn", "Sektor", "Data dostawy", "Data wydania", "Dostawca", "Cena"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaHistoria.setDragEnabled(true);
        tabelaHistoria.setSelectionBackground(new java.awt.Color(43, 87, 157));
        tabelaHistoria.setUpdateSelectionOnSort(false);
        jScrollPane4.setViewportView(tabelaHistoria);
        if (tabelaHistoria.getColumnModel().getColumnCount() > 0) {
            tabelaHistoria.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(">> HISTORIA PRODUKTÓW");

        javax.swing.GroupLayout panelHistoriaLayout = new javax.swing.GroupLayout(panelHistoria);
        panelHistoria.setLayout(panelHistoriaLayout);
        panelHistoriaLayout.setHorizontalGroup(
            panelHistoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHistoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelHistoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1076, Short.MAX_VALUE)
                    .addGroup(panelHistoriaLayout.createSequentialGroup()
                        .addComponent(poleWyszukiwanie3)
                        .addGap(17, 17, 17)
                        .addComponent(pWyszukaj3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelHistoriaLayout.createSequentialGroup()
                        .addGroup(panelHistoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(panelHistoriaLayout.createSequentialGroup()
                                .addGap(417, 417, 417)
                                .addComponent(pPrzywrocProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelHistoriaLayout.setVerticalGroup(
            panelHistoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHistoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pPrzywrocProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelHistoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poleWyszukiwanie3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pWyszukaj3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gradientGlowny.add(panelHistoria, "card6");

        panelStatystyki.setBackground(new java.awt.Color(44, 62, 80));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(">> STATYSTYKI MAGAZYNU");

        wykresObsz.setBackground(new java.awt.Color(44, 62, 80));
        wykresObsz.setLayout(new java.awt.BorderLayout());

        poleProgresBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        poleProgresBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/progresbar.gif"))); // NOI18N
        wykresObsz.add(poleProgresBar, java.awt.BorderLayout.CENTER);

        wykresSlup.setBackground(new java.awt.Color(44, 62, 80));
        wykresSlup.setLayout(new java.awt.BorderLayout());

        poleProgresBar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        poleProgresBar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/progresbar.gif"))); // NOI18N
        wykresSlup.add(poleProgresBar2, java.awt.BorderLayout.CENTER);

        tloStatystyki.setBackground(new java.awt.Color(225, 225, 234,30));

        textProdStan.setBackground(new java.awt.Color(65, 131, 215));
        textProdStan.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textProdStan.setForeground(new java.awt.Color(105, 163, 237));
        textProdStan.setText("Produkty na stanie: ");

        poleProdStan.setBackground(new java.awt.Color(65, 131, 215));
        poleProdStan.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleProdStan.setForeground(new java.awt.Color(255, 255, 255));
        poleProdStan.setText("p_stan");

        textProdArchiw.setBackground(new java.awt.Color(65, 131, 215));
        textProdArchiw.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textProdArchiw.setForeground(new java.awt.Color(105, 163, 237));
        textProdArchiw.setText("Produkty wydane:");

        poleProdArchiw.setBackground(new java.awt.Color(65, 131, 215));
        poleProdArchiw.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleProdArchiw.setForeground(new java.awt.Color(255, 255, 255));
        poleProdArchiw.setText("p_wyd");

        textProdTyp.setBackground(new java.awt.Color(65, 131, 215));
        textProdTyp.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textProdTyp.setForeground(new java.awt.Color(105, 163, 237));
        textProdTyp.setText("Ilość typów produktów:");

        poleProdTyp.setBackground(new java.awt.Color(65, 131, 215));
        poleProdTyp.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleProdTyp.setForeground(new java.awt.Color(255, 255, 255));
        poleProdTyp.setText("p_typ");

        textMagazyny.setBackground(new java.awt.Color(65, 131, 215));
        textMagazyny.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textMagazyny.setForeground(new java.awt.Color(105, 163, 237));
        textMagazyny.setText("Ilosć magazynów:");

        poleMagazyny.setBackground(new java.awt.Color(65, 131, 215));
        poleMagazyny.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleMagazyny.setForeground(new java.awt.Color(255, 255, 255));
        poleMagazyny.setText("magazyny");

        textSekt.setBackground(new java.awt.Color(65, 131, 215));
        textSekt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textSekt.setForeground(new java.awt.Color(105, 163, 237));
        textSekt.setText("Ilość sektorów:");

        poleSekt.setBackground(new java.awt.Color(65, 131, 215));
        poleSekt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleSekt.setForeground(new java.awt.Color(255, 255, 255));
        poleSekt.setText("p_sekt");

        textDostawcy.setBackground(new java.awt.Color(65, 131, 215));
        textDostawcy.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textDostawcy.setForeground(new java.awt.Color(105, 163, 237));
        textDostawcy.setText("Ilość dostawców:");

        poleDostawcy.setBackground(new java.awt.Color(65, 131, 215));
        poleDostawcy.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleDostawcy.setForeground(new java.awt.Color(255, 255, 255));
        poleDostawcy.setText("dostawcy");

        textOdbiorcy.setBackground(new java.awt.Color(65, 131, 215));
        textOdbiorcy.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textOdbiorcy.setForeground(new java.awt.Color(105, 163, 237));
        textOdbiorcy.setText("Ilość odbiorców:");

        poleOdbiorcy.setBackground(new java.awt.Color(65, 131, 215));
        poleOdbiorcy.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleOdbiorcy.setForeground(new java.awt.Color(255, 255, 255));
        poleOdbiorcy.setText("odbiorcy");

        textFaktury.setBackground(new java.awt.Color(65, 131, 215));
        textFaktury.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textFaktury.setForeground(new java.awt.Color(105, 163, 237));
        textFaktury.setText("Ilość faktur");

        poleFaktury.setBackground(new java.awt.Color(65, 131, 215));
        poleFaktury.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleFaktury.setForeground(new java.awt.Color(255, 255, 255));
        poleFaktury.setText("faktury");

        textUzytk.setBackground(new java.awt.Color(65, 131, 215));
        textUzytk.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textUzytk.setForeground(new java.awt.Color(105, 163, 237));
        textUzytk.setText("Użytkownicy:");

        poleUzytk.setBackground(new java.awt.Color(65, 131, 215));
        poleUzytk.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleUzytk.setForeground(new java.awt.Color(255, 255, 255));
        poleUzytk.setText("uzytkownicy");

        javax.swing.GroupLayout tloStatystykiLayout = new javax.swing.GroupLayout(tloStatystyki);
        tloStatystyki.setLayout(tloStatystykiLayout);
        tloStatystykiLayout.setHorizontalGroup(
            tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tloStatystykiLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textProdStan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleProdStan))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textProdArchiw)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleProdArchiw))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textMagazyny)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleMagazyny))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textProdTyp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleProdTyp))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textSekt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleSekt))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textDostawcy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleDostawcy))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textOdbiorcy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleOdbiorcy))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textFaktury)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleFaktury))
                    .addGroup(tloStatystykiLayout.createSequentialGroup()
                        .addComponent(textUzytk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poleUzytk)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        tloStatystykiLayout.setVerticalGroup(
            tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tloStatystykiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textProdStan)
                    .addComponent(poleProdStan, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textProdArchiw)
                    .addComponent(poleProdArchiw, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textProdTyp)
                    .addComponent(poleProdTyp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textMagazyny)
                    .addComponent(poleMagazyny))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSekt)
                    .addComponent(poleSekt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDostawcy)
                    .addComponent(poleDostawcy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textOdbiorcy)
                    .addComponent(poleOdbiorcy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFaktury)
                    .addComponent(poleFaktury))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tloStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textUzytk)
                    .addComponent(poleUzytk))
                .addContainerGap())
        );

        textNajlepszyMag.setBackground(new java.awt.Color(65, 131, 215));
        textNajlepszyMag.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNajlepszyMag.setForeground(new java.awt.Color(105, 163, 237));
        textNajlepszyMag.setText("TOP magazyn:");

        poleNajlepszyMag.setBackground(new java.awt.Color(65, 131, 215));
        poleNajlepszyMag.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleNajlepszyMag.setForeground(new java.awt.Color(255, 255, 255));
        poleNajlepszyMag.setText("magazyn");

        textNajlepszyDostawca.setBackground(new java.awt.Color(65, 131, 215));
        textNajlepszyDostawca.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNajlepszyDostawca.setForeground(new java.awt.Color(105, 163, 237));
        textNajlepszyDostawca.setText("TOP dostawca:");

        poleNajlepszyDostawca.setBackground(new java.awt.Color(65, 131, 215));
        poleNajlepszyDostawca.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleNajlepszyDostawca.setForeground(new java.awt.Color(255, 255, 255));
        poleNajlepszyDostawca.setText("coś innego");

        textNajlepszyProdukt.setBackground(new java.awt.Color(65, 131, 215));
        textNajlepszyProdukt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNajlepszyProdukt.setForeground(new java.awt.Color(105, 163, 237));
        textNajlepszyProdukt.setText("TOP produkt:");

        poleNajlepszyProdukt.setBackground(new java.awt.Color(65, 131, 215));
        poleNajlepszyProdukt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleNajlepszyProdukt.setForeground(new java.awt.Color(255, 255, 255));
        poleNajlepszyProdukt.setText("coś innego");

        javax.swing.GroupLayout panelStatystykiLayout = new javax.swing.GroupLayout(panelStatystyki);
        panelStatystyki.setLayout(panelStatystykiLayout);
        panelStatystykiLayout.setHorizontalGroup(
            panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatystykiLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(tloStatystyki, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wykresObsz, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wykresSlup, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
            .addGroup(panelStatystykiLayout.createSequentialGroup()
                .addGroup(panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStatystykiLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelStatystykiLayout.createSequentialGroup()
                                .addComponent(textNajlepszyProdukt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(poleNajlepszyProdukt))
                            .addGroup(panelStatystykiLayout.createSequentialGroup()
                                .addComponent(textNajlepszyDostawca)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(poleNajlepszyDostawca))
                            .addGroup(panelStatystykiLayout.createSequentialGroup()
                                .addComponent(textNajlepszyMag)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(poleNajlepszyMag))))
                    .addGroup(panelStatystykiLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelStatystykiLayout.setVerticalGroup(
            panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatystykiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStatystykiLayout.createSequentialGroup()
                        .addComponent(wykresObsz, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(wykresSlup, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStatystykiLayout.createSequentialGroup()
                        .addComponent(tloStatystyki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNajlepszyMag)
                            .addComponent(poleNajlepszyMag))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNajlepszyDostawca)
                            .addComponent(poleNajlepszyDostawca))
                        .addGap(6, 6, 6)))
                .addGroup(panelStatystykiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNajlepszyProdukt)
                    .addComponent(poleNajlepszyProdukt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gradientGlowny.add(panelStatystyki, "card7");

        panelDokumenty.setBackground(new java.awt.Color(44, 62, 80));

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText(">> DOKUMENTY");

        tabelaDokumenty.setForeground(new java.awt.Color(108, 122, 137));
        tabelaDokumenty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Typ", "Numer", "Data wystawienia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDokumenty.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDokumentyMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tabelaDokumenty);
        if (tabelaDokumenty.getColumnModel().getColumnCount() > 0) {
            tabelaDokumenty.getColumnModel().getColumn(0).setPreferredWidth(28);
            tabelaDokumenty.getColumnModel().getColumn(0).setMaxWidth(28);
        }

        podgladDokumentu.setBackground(new java.awt.Color(130, 138, 145));
        podgladDokumentu.setColumns(20);
        podgladDokumentu.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        podgladDokumentu.setForeground(new java.awt.Color(255, 255, 255));
        podgladDokumentu.setRows(5);
        jScrollPane7.setViewportView(podgladDokumentu);

        pDodajDokument.setBackground(new java.awt.Color(75, 119, 190));
        pDodajDokument.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pDodajDokument.setForeground(new java.awt.Color(255, 255, 255));
        pDodajDokument.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonyFaktury.png"))); // NOI18N
        pDodajDokument.setText("  Dodaj dokument");
        pDodajDokument.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pDodajDokument.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDodajDokumentMouseClicked(evt);
            }
        });
        pDodajDokument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDodajDokumentActionPerformed(evt);
            }
        });

        pDodajDokument1.setBackground(new java.awt.Color(75, 119, 190));
        pDodajDokument1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pDodajDokument1.setForeground(new java.awt.Color(255, 255, 255));
        pDodajDokument1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonyFaktury.png"))); // NOI18N
        pDodajDokument1.setText("  Usuń dokument");
        pDodajDokument1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pDodajDokument1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDodajDokument1MouseClicked(evt);
            }
        });
        pDodajDokument1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDodajDokument1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDokumentyLayout = new javax.swing.GroupLayout(panelDokumenty);
        panelDokumenty.setLayout(panelDokumentyLayout);
        panelDokumentyLayout.setHorizontalGroup(
            panelDokumentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDokumentyLayout.createSequentialGroup()
                .addGroup(panelDokumentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDokumentyLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelDokumentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addGroup(panelDokumentyLayout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addGroup(panelDokumentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pDodajDokument1)
                                    .addComponent(pDodajDokument)))))
                    .addGroup(panelDokumentyLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelDokumentyLayout.setVerticalGroup(
            panelDokumentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDokumentyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDokumentyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDokumentyLayout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(pDodajDokument)
                        .addGap(36, 36, 36)
                        .addComponent(pDodajDokument1)
                        .addGap(87, 87, 87))
                    .addGroup(panelDokumentyLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        gradientGlowny.add(panelDokumenty, "card8");

        panelOpcje.setBackground(new java.awt.Color(44, 62, 80));
        panelOpcje.setLayout(new java.awt.CardLayout());

        OpcjeStart.setBackground(new java.awt.Color(44, 62, 80));

        tloDane.setBackground(new java.awt.Color(225, 225, 234,30));
        tloDane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textNazwaUzytk.setBackground(new java.awt.Color(65, 131, 215));
        textNazwaUzytk.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNazwaUzytk.setForeground(new java.awt.Color(105, 163, 237));
        textNazwaUzytk.setText("Nazwa użytkownika:");
        tloDane.add(textNazwaUzytk, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        poleNazwaUzytk.setBackground(new java.awt.Color(65, 131, 215));
        poleNazwaUzytk.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleNazwaUzytk.setForeground(new java.awt.Color(255, 255, 255));
        poleNazwaUzytk.setText("uzytkownik");
        tloDane.add(poleNazwaUzytk, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 12, -1, -1));

        textTypKonta.setBackground(new java.awt.Color(65, 131, 215));
        textTypKonta.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textTypKonta.setForeground(new java.awt.Color(105, 163, 237));
        textTypKonta.setText("Typ konta:");
        tloDane.add(textTypKonta, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 120, -1, -1));

        poleTypKonta.setBackground(new java.awt.Color(65, 131, 215));
        poleTypKonta.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleTypKonta.setForeground(new java.awt.Color(255, 255, 255));
        poleTypKonta.setText("typ_konta");
        tloDane.add(poleTypKonta, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 120, -1, -1));

        textDataRej.setBackground(new java.awt.Color(65, 131, 215));
        textDataRej.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textDataRej.setForeground(new java.awt.Color(105, 163, 237));
        textDataRej.setText("Data rejestracji:");
        tloDane.add(textDataRej, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 156, -1, -1));

        poleDataRej.setBackground(new java.awt.Color(65, 131, 215));
        poleDataRej.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleDataRej.setForeground(new java.awt.Color(255, 255, 255));
        poleDataRej.setText("data_rej");
        tloDane.add(poleDataRej, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 156, -1, -1));

        textSesja.setBackground(new java.awt.Color(65, 131, 215));
        textSesja.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textSesja.setForeground(new java.awt.Color(105, 163, 237));
        textSesja.setText("Długość sesji:");
        tloDane.add(textSesja, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 192, -1, -1));

        poleSesja.setBackground(new java.awt.Color(65, 131, 215));
        poleSesja.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleSesja.setForeground(new java.awt.Color(255, 255, 255));
        poleSesja.setText("sesja");
        tloDane.add(poleSesja, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 192, -1, -1));

        textStatus.setBackground(new java.awt.Color(65, 131, 215));
        textStatus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textStatus.setForeground(new java.awt.Color(105, 163, 237));
        textStatus.setText("Status konta:");
        tloDane.add(textStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 228, -1, -1));

        poleStatus.setBackground(new java.awt.Color(65, 131, 215));
        poleStatus.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleStatus.setForeground(new java.awt.Color(255, 255, 255));
        poleStatus.setText("status");
        tloDane.add(poleStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 228, -1, -1));

        textImie.setBackground(new java.awt.Color(65, 131, 215));
        textImie.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textImie.setForeground(new java.awt.Color(105, 163, 237));
        textImie.setText("Imię:");
        tloDane.add(textImie, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 48, -1, -1));

        poleImie.setBackground(new java.awt.Color(65, 131, 215));
        poleImie.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleImie.setForeground(new java.awt.Color(255, 255, 255));
        poleImie.setText("imie");
        tloDane.add(poleImie, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 48, -1, -1));

        textNazwisko.setBackground(new java.awt.Color(65, 131, 215));
        textNazwisko.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNazwisko.setForeground(new java.awt.Color(105, 163, 237));
        textNazwisko.setText("Nazwisko:");
        tloDane.add(textNazwisko, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 84, -1, -1));

        poleNazwisko.setBackground(new java.awt.Color(65, 131, 215));
        poleNazwisko.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleNazwisko.setForeground(new java.awt.Color(255, 255, 255));
        poleNazwisko.setText("nazwisko");
        tloDane.add(poleNazwisko, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 84, -1, -1));

        pZmienHaslo.setBackground(new java.awt.Color(75, 119, 190));
        pZmienHaslo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pZmienHaslo.setForeground(new java.awt.Color(255, 255, 255));
        pZmienHaslo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pZmienHaslo.setText("  Zmień hasło");
        pZmienHaslo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pZmienHaslo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pZmienHasloMouseClicked(evt);
            }
        });

        pZmienLogin.setBackground(new java.awt.Color(75, 119, 190));
        pZmienLogin.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pZmienLogin.setForeground(new java.awt.Color(255, 255, 255));
        pZmienLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pZmienLogin.setText("  Zmień login");
        pZmienLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pZmienLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pZmienLoginMouseClicked(evt);
            }
        });

        pZglosBlad.setBackground(new java.awt.Color(75, 119, 190));
        pZglosBlad.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pZglosBlad.setForeground(new java.awt.Color(255, 255, 255));
        pZglosBlad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pZglosBlad.setText("  Zgłoś błąd");
        pZglosBlad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pZglosBlad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pZglosBladMouseClicked(evt);
            }
        });

        pNotatki.setBackground(new java.awt.Color(75, 119, 190));
        pNotatki.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pNotatki.setForeground(new java.awt.Color(255, 255, 255));
        pNotatki.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pNotatki.setText("  Notatki");
        pNotatki.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pNotatki.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pNotatkiMouseClicked(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText(">> USTAWIENIA ");

        javax.swing.GroupLayout OpcjeStartLayout = new javax.swing.GroupLayout(OpcjeStart);
        OpcjeStart.setLayout(OpcjeStartLayout);
        OpcjeStartLayout.setHorizontalGroup(
            OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpcjeStartLayout.createSequentialGroup()
                .addGroup(OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OpcjeStartLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(tloDane, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addGroup(OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pZmienLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pZglosBlad, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pZmienHaslo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pNotatki, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(OpcjeStartLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel23)))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        OpcjeStartLayout.setVerticalGroup(
            OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpcjeStartLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addGroup(OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OpcjeStartLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(tloDane, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(OpcjeStartLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pZmienLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pZmienHaslo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71)
                        .addGroup(OpcjeStartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pZglosBlad, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pNotatki, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        panelOpcje.add(OpcjeStart, "card3");

        gradientGlowny.add(panelOpcje, "card9");

        panelOpcjeAdmin.setBackground(new java.awt.Color(44, 62, 80));

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText(">> USTAWIENIA ADMINISTRATORA ");

        tabelaBledy.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabelaBledy.setForeground(new java.awt.Color(108, 122, 137));
        tabelaBledy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Zgłaszający", "Tytuł", "Data ", "Opis", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaBledy.setSelectionBackground(new java.awt.Color(218, 218, 218));
        tabelaBledy.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelaBledy.setUpdateSelectionOnSort(false);
        jScrollPane5.setViewportView(tabelaBledy);
        if (tabelaBledy.getColumnModel().getColumnCount() > 0) {
            tabelaBledy.getColumnModel().getColumn(0).setMinWidth(28);
            tabelaBledy.getColumnModel().getColumn(0).setPreferredWidth(28);
            tabelaBledy.getColumnModel().getColumn(0).setMaxWidth(28);
            tabelaBledy.getColumnModel().getColumn(1).setMinWidth(70);
            tabelaBledy.getColumnModel().getColumn(2).setMinWidth(95);
            tabelaBledy.getColumnModel().getColumn(2).setPreferredWidth(100);
            tabelaBledy.getColumnModel().getColumn(2).setMaxWidth(96);
            tabelaBledy.getColumnModel().getColumn(3).setMinWidth(130);
            tabelaBledy.getColumnModel().getColumn(3).setPreferredWidth(130);
            tabelaBledy.getColumnModel().getColumn(3).setMaxWidth(130);
            tabelaBledy.getColumnModel().getColumn(4).setMinWidth(100);
            tabelaBledy.getColumnModel().getColumn(4).setPreferredWidth(200);
            tabelaBledy.getColumnModel().getColumn(5).setMinWidth(95);
            tabelaBledy.getColumnModel().getColumn(5).setPreferredWidth(95);
            tabelaBledy.getColumnModel().getColumn(5).setMaxWidth(95);
        }

        tloPrzyciskiTabela.setBackground(new java.awt.Color(65, 81, 98));

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(105, 163, 237));
        jLabel24.setText("ZMIANA STATUSU");

        pPriorytetowy.setBackground(new java.awt.Color(246, 71, 71));
        pPriorytetowy.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pPriorytetowy.setForeground(new java.awt.Color(255, 255, 255));
        pPriorytetowy.setText("PRIORYTETOWY");
        pPriorytetowy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pPriorytetowy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pPriorytetowyMouseClicked(evt);
            }
        });

        pNeutralny.setBackground(new java.awt.Color(75, 119, 190));
        pNeutralny.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pNeutralny.setForeground(new java.awt.Color(255, 255, 255));
        pNeutralny.setText("NEUTRALNY");
        pNeutralny.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pNeutralny.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pNeutralnyMouseClicked(evt);
            }
        });

        pRozpatrzony.setBackground(new java.awt.Color(3, 166, 120));
        pRozpatrzony.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pRozpatrzony.setForeground(new java.awt.Color(255, 255, 255));
        pRozpatrzony.setText("ROZPATRZONY");
        pRozpatrzony.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pRozpatrzony.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pRozpatrzonyMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tloPrzyciskiTabelaLayout = new javax.swing.GroupLayout(tloPrzyciskiTabela);
        tloPrzyciskiTabela.setLayout(tloPrzyciskiTabelaLayout);
        tloPrzyciskiTabelaLayout.setHorizontalGroup(
            tloPrzyciskiTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tloPrzyciskiTabelaLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel24)
                .addGap(10, 10, 10)
                .addComponent(pRozpatrzony)
                .addGap(18, 18, 18)
                .addComponent(pPriorytetowy)
                .addGap(18, 18, 18)
                .addComponent(pNeutralny)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tloPrzyciskiTabelaLayout.setVerticalGroup(
            tloPrzyciskiTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tloPrzyciskiTabelaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(tloPrzyciskiTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pPriorytetowy)
                    .addComponent(pNeutralny)
                    .addComponent(jLabel24)
                    .addComponent(pRozpatrzony))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        wykresSlupAdmin.setBackground(new java.awt.Color(44, 62, 80));
        wykresSlupAdmin.setLayout(new java.awt.BorderLayout());

        poleProgresBar3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        poleProgresBar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/progresbar.gif"))); // NOI18N
        wykresSlupAdmin.add(poleProgresBar3, java.awt.BorderLayout.CENTER);

        pZamknijSystem.setBackground(new java.awt.Color(246, 71, 71));
        pZamknijSystem.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pZamknijSystem.setForeground(new java.awt.Color(255, 255, 255));
        pZamknijSystem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pZamknijSystem.setText("  Zamknij system");
        pZamknijSystem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pZamknijSystem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pZamknijSystemMouseClicked(evt);
            }
        });

        pDodajUzytk.setBackground(new java.awt.Color(75, 119, 190));
        pDodajUzytk.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pDodajUzytk.setForeground(new java.awt.Color(255, 255, 255));
        pDodajUzytk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pDodajUzytk.setText("  Dodaj uzytkownika");
        pDodajUzytk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pDodajUzytk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pDodajUzytkMouseClicked(evt);
            }
        });
        pDodajUzytk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDodajUzytkActionPerformed(evt);
            }
        });

        pEdytujUzytk.setBackground(new java.awt.Color(75, 119, 190));
        pEdytujUzytk.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pEdytujUzytk.setForeground(new java.awt.Color(255, 255, 255));
        pEdytujUzytk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pEdytujUzytk.setText("  Edytuj Uzytkownika");
        pEdytujUzytk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pEdytujUzytk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pEdytujUzytkMouseClicked(evt);
            }
        });

        pKonfiguracja.setBackground(new java.awt.Color(75, 119, 190));
        pKonfiguracja.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pKonfiguracja.setForeground(new java.awt.Color(255, 255, 255));
        pKonfiguracja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Formularze/Ikony/ikonaOpcje2.png"))); // NOI18N
        pKonfiguracja.setText("  Konfiguracja systemu");
        pKonfiguracja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pKonfiguracja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pKonfiguracjaMouseClicked(evt);
            }
        });

        tloDane2.setBackground(new java.awt.Color(65, 81, 98));
        tloDane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textAktywniUzytk.setBackground(new java.awt.Color(65, 131, 215));
        textAktywniUzytk.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textAktywniUzytk.setForeground(new java.awt.Color(105, 163, 237));
        textAktywniUzytk.setText("Aktywni użytk.:");
        tloDane2.add(textAktywniUzytk, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        poleAktywniUzytk.setBackground(new java.awt.Color(65, 131, 215));
        poleAktywniUzytk.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleAktywniUzytk.setForeground(new java.awt.Color(255, 255, 255));
        poleAktywniUzytk.setText("aktyw");
        tloDane2.add(poleAktywniUzytk, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        textStatusSys.setBackground(new java.awt.Color(65, 131, 215));
        textStatusSys.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textStatusSys.setForeground(new java.awt.Color(105, 163, 237));
        textStatusSys.setText("Status systemu:");
        tloDane2.add(textStatusSys, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        poleStatusSys.setBackground(new java.awt.Color(65, 131, 215));
        poleStatusSys.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleStatusSys.setForeground(new java.awt.Color(255, 255, 255));
        poleStatusSys.setText("status");
        tloDane2.add(poleStatusSys, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, -1, -1));

        textIloscKont.setBackground(new java.awt.Color(65, 131, 215));
        textIloscKont.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textIloscKont.setForeground(new java.awt.Color(105, 163, 237));
        textIloscKont.setText("Ilość kont:");
        tloDane2.add(textIloscKont, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        poleIloscKont.setBackground(new java.awt.Color(65, 131, 215));
        poleIloscKont.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleIloscKont.setForeground(new java.awt.Color(255, 255, 255));
        poleIloscKont.setText("ilosc");
        tloDane2.add(poleIloscKont, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        textWiadomosc.setBackground(new java.awt.Color(65, 131, 215));
        textWiadomosc.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textWiadomosc.setForeground(new java.awt.Color(105, 163, 237));
        textWiadomosc.setText("Ogłoszenie:");
        tloDane2.add(textWiadomosc, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        poleWiadomosc.setBackground(new java.awt.Color(65, 131, 215));
        poleWiadomosc.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        poleWiadomosc.setForeground(new java.awt.Color(255, 255, 255));
        poleWiadomosc.setText("wiad");
        tloDane2.add(poleWiadomosc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 130, -1));

        javax.swing.GroupLayout panelOpcjeAdminLayout = new javax.swing.GroupLayout(panelOpcjeAdmin);
        panelOpcjeAdmin.setLayout(panelOpcjeAdminLayout);
        panelOpcjeAdminLayout.setHorizontalGroup(
            panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcjeAdminLayout.createSequentialGroup()
                .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOpcjeAdminLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel25))
                    .addGroup(panelOpcjeAdminLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tloPrzyciskiTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(wykresSlupAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(104, 104, 104)
                        .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pDodajUzytk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelOpcjeAdminLayout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pZamknijSystem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tloDane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pKonfiguracja, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(pEdytujUzytk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        panelOpcjeAdminLayout.setVerticalGroup(
            panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcjeAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelOpcjeAdminLayout.createSequentialGroup()
                        .addComponent(pDodajUzytk, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pEdytujUzytk, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pKonfiguracja, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pZamknijSystem, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelOpcjeAdminLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tloPrzyciskiTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(panelOpcjeAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tloDane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wykresSlupAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        gradientGlowny.add(panelOpcjeAdmin, "card10");

        getContentPane().add(gradientGlowny, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1100, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textWyjscieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textWyjscieMouseClicked
        JOptionPane.showMessageDialog(this, "Najpierw musisz się wylogować!", "Wyjście", 2);
        daneUzytk.wyloguj();
        //System.exit(0);

    }//GEN-LAST:event_textWyjscieMouseClicked

    private void textMinimalizujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMinimalizujMouseClicked
        this.setState(FormGlowny.ICONIFIED);
    }//GEN-LAST:event_textMinimalizujMouseClicked

    private void gradientNaglowekMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_gradientNaglowekMouseDragged

    private void gradientNaglowekMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_gradientNaglowekMousePressed

    private void przyciskDomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskDomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_przyciskDomActionPerformed

    private void przyciskDomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskDomMouseClicked
        panelProdukty.setVisible(false);
        panelMagazyny.setVisible(false);
        panelDostawcy.setVisible(false);
        panelHistoria.setVisible(false);
        panelStatystyki.setVisible(false);
        panelDokumenty.setVisible(false);
        panelOpcje.setVisible(false);
        panelOpcjeAdmin.setVisible(false);
        panelStartowy.setVisible(true);
        uzupelnijPanelStartowy();
    }//GEN-LAST:event_przyciskDomMouseClicked

    private void pListaProduktowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pListaProduktowMouseClicked
        panelProdukty.setVisible(true);
        panelStartowy.setVisible(false);
        pokaz_liste_produktow(0);
    }//GEN-LAST:event_pListaProduktowMouseClicked

    private void pWylogujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pWylogujActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pWylogujActionPerformed

    private void pListaProduktowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pListaProduktowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pListaProduktowActionPerformed

    private void pWyszukajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pWyszukajActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pWyszukajActionPerformed

    private void pWyszukaj1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pWyszukaj1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pWyszukaj1ActionPerformed

    private void pDodajMagazynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDodajMagazynActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pDodajMagazynActionPerformed

    private void pListaMagazynowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pListaMagazynowMouseClicked
        panelMagazyny.setVisible(true);
        panelStartowy.setVisible(false);
        pokaz_liste_magazynow(0);
    }//GEN-LAST:event_pListaMagazynowMouseClicked

    private void pWyszukaj2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pWyszukaj2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pWyszukaj2ActionPerformed

    private void pZablokujOdblokujDostawceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pZablokujOdblokujDostawceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pZablokujOdblokujDostawceActionPerformed

    private void pListaDostawcowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pListaDostawcowMouseClicked
        panelDostawcy.setVisible(true);
        panelStartowy.setVisible(false);
        pokaz_liste_dostawcow(0);
    }//GEN-LAST:event_pListaDostawcowMouseClicked

    private void pPrzywrocProduktActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pPrzywrocProduktActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pPrzywrocProduktActionPerformed

    private void pWyszukaj3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pWyszukaj3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pWyszukaj3ActionPerformed

    private void pHistoriaProduktowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pHistoriaProduktowMouseClicked
        panelHistoria.setVisible(true);
        panelStartowy.setVisible(false);
        pokaz_liste_produktow(2);
    }//GEN-LAST:event_pHistoriaProduktowMouseClicked

    private void pStatystykiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pStatystykiMouseClicked
        panelStatystyki.setVisible(true);
        panelStartowy.setVisible(false);
        pokaz_statystyki();
        wykresObsz.removeAll();
        wykresSlup.removeAll();
        wykresObsz.add(poleProgresBar);
        wykresSlup.add(poleProgresBar2);
        poleProgresBar.setVisible(true);
        poleProgresBar2.setVisible(true);

        Thread loadingThread = new Thread(new Runnable() {
            @Override
            public void run() {
                for (int i = 0; i <= 100; i++) {
                    try {
                        Thread.sleep(10);
                        if (i == 100) {
                            poleProgresBar.setVisible(false);
                            poleProgresBar2.setVisible(false);
                            renderWykresObszarowy();
                            renderWykresSlupkowy(1);
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e, "Błąd!", 2);
                    }
                }
            }
        });

        loadingThread.start();


    }//GEN-LAST:event_pStatystykiMouseClicked

    private void pWylogujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pWylogujMouseClicked

        Object[] opcje = {"Tak", "Nie"};
        int czy_napewno = JOptionPane.showOptionDialog(null, "Czy napewno chcesz się wylogować?", "Wylogowywanie", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
        if (czy_napewno == 0) {
            this.dispose();
            FormLogowanie FL = new FormLogowanie();
            FL.setPolaczenie(PolaczenieBaza.getPolaczenie());
            FL.setBazaTekst();
            FL.setVisible(true);
            daneUzytk.wyloguj();

        }
    }//GEN-LAST:event_pWylogujMouseClicked

    private void pWyszukajMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pWyszukajMouseClicked
        pokaz_liste_produktow(1);
    }//GEN-LAST:event_pWyszukajMouseClicked

    private void poleWyszukiwanieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_poleWyszukiwanieKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            pokaz_liste_produktow(1);
        }
    }//GEN-LAST:event_poleWyszukiwanieKeyPressed

    private void pDodajProduktMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDodajProduktMouseClicked
        FormDodajEdytujProdukt FDP = new FormDodajEdytujProdukt(con, this);
        FDP.setVisible(true);
        pokaz_liste_produktow(1);
    }//GEN-LAST:event_pDodajProduktMouseClicked

    private void pEdytujProduktMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pEdytujProduktMouseClicked

        if (tabelaProdukty.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz wiersz do edycji! ", "Błąd!", 2);
        } else if (!edycja_otwarta && tabelaProdukty.getSelectedRow() != -1) { // okno edycji jest juz otwarte

            FormDodajEdytujProdukt FDP = new FormDodajEdytujProdukt(con, tabelaProdukty, this);
            FDP.setVisible(true);
            edycja_otwarta = true;
        } else {
            JOptionPane.showMessageDialog(this, "Możesz edytować tylko jeden produkt na raz!", "Błąd!", 2);
        }
    }//GEN-LAST:event_pEdytujProduktMouseClicked

    private void pUsunProduktMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pUsunProduktMouseClicked

        if (tabelaProdukty.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz wiersz do usunięcia! ", "Błąd!", 2);
        } else {

            DefaultTableModel model = (DefaultTableModel) tabelaProdukty.getModel();
            int wiersz = tabelaProdukty.getSelectedRow();
            String id = model.getValueAt(wiersz, 0).toString();
            String nazwa = model.getValueAt(wiersz, 1).toString();
            DateFormat df = new SimpleDateFormat("yyy-MM-dd");
            Date data = new Date();

            Object[] opcje = {"Tak", "Nie"};
            int czy_napewno = JOptionPane.showOptionDialog(this, "Czy napewno chcesz usunąć wiersz o ID: " + id + " i nazwie: " + nazwa, "Usuwanie", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno == 0) {
                String query1 = "UPDATE produkty SET usuniety=1 WHERE id_p='" + id + "'";
                String query2 = "UPDATE historia_produktow SET data_wydania='" + df.format(data) + "'" + "WHERE id_p='" + id + "'";
                PreparedStatement usun;
                try {
                    con.setAutoCommit(false);
                    usun = con.prepareStatement(query1);
                    usun.executeUpdate();
                    usun = con.prepareStatement(query2);
                    usun.executeUpdate();
                    con.commit();
                    pokaz_liste_produktow(1);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Błąd zapytania!", "Błąd!", 2);
                }
            }
        }
    }//GEN-LAST:event_pUsunProduktMouseClicked

    private void pWyszukaj1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pWyszukaj1MouseClicked
        pokaz_liste_magazynow(1);
    }//GEN-LAST:event_pWyszukaj1MouseClicked

    private void pDodajMagazynMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDodajMagazynMouseClicked
        FormDodajEdytujMagazyn FDM = new FormDodajEdytujMagazyn(con);
        FDM.setVisible(true);
    }//GEN-LAST:event_pDodajMagazynMouseClicked

    private void pEdytujMagazynMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pEdytujMagazynMouseClicked
        if (tabelaMagazyny.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz wiersz do edycji! ", "Błąd!", 2);
        } else if (!edycja_otwarta && tabelaMagazyny.getSelectedRow() != -1) { // okno edycji jest juz otwarte

            FormDodajEdytujMagazyn FDM = new FormDodajEdytujMagazyn(con, tabelaMagazyny);
            FDM.setVisible(true);
            edycja_otwarta = true;
        } else {
            JOptionPane.showMessageDialog(this, "Możesz edytować tylko jeden magazyn na raz!", "Błąd!", 2);
        }
    }//GEN-LAST:event_pEdytujMagazynMouseClicked

    private void pZablokujOdblokujMagazynMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pZablokujOdblokujMagazynMouseClicked
        if (tabelaMagazyny.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz magazyn do zablokowania/odblokowania! ", "Błąd!", 2);
        } else {

            DefaultTableModel model = (DefaultTableModel) tabelaMagazyny.getModel();
            int wiersz = tabelaMagazyny.getSelectedRow();
            String id = model.getValueAt(wiersz, 0).toString();
            String nazwa = model.getValueAt(wiersz, 1).toString();
            String czyZablok = model.getValueAt(wiersz, 7).toString();

            Object[] opcje = {"Tak", "Nie"};
            int czy_napewno = JOptionPane.showOptionDialog(this, "Czy napewno chcesz zablokować/odblokować wiersz o ID: " + id + " i nazwie: " + nazwa
                    + "\nZablokowanie magazynu spowoduje brak mozliwosci przypisywania do niego produktów!", "Blokowanie/Odblokowywanie", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno == 0) {
                String query1 = "UPDATE magazyny SET zablokowany=1 WHERE id_m='" + id + "'";
                String query2 = "UPDATE magazyny SET zablokowany=0 WHERE id_m='" + id + "'";
                PreparedStatement usun;
                try {
                    if (czyZablok.equals("Nie")) {
                        usun = con.prepareStatement(query1);
                    } else {
                        usun = con.prepareStatement(query2);
                    }
                    usun.executeUpdate();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Błąd zapytania!", "Błąd!", 2);
                }
            }
        }
    }//GEN-LAST:event_pZablokujOdblokujMagazynMouseClicked

    private void pUsunPrzywrocMagazynMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pUsunPrzywrocMagazynMouseClicked
        if (tabelaMagazyny.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz magazyn do usuniecia/przywrocenia! ", "Błąd!", 2);
        } else {

            DefaultTableModel model = (DefaultTableModel) tabelaMagazyny.getModel();
            int wiersz = tabelaMagazyny.getSelectedRow();
            String id = model.getValueAt(wiersz, 0).toString();
            String nazwa = model.getValueAt(wiersz, 1).toString();
            String czyZablok = model.getValueAt(wiersz, 8).toString();

            Object[] opcje = {"Tak", "Nie"};
            int czy_napewno = JOptionPane.showOptionDialog(this, "Czy napewno chcesz usunac/przywrocic wiersz o ID: " + id + " i nazwie: " + nazwa
                    + "\nUsuniecie magazynu spowoduje rownież zarchiwizowanie wszystkich przedmiotów do niego przypisanych!", "Usuwanie/Przywracanie", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno == 0) {
                String query1 = "UPDATE produkty INNER JOIN historia_produktow ON historia_produktow.id_p = produkty.id_p SET usuniety=1 WHERE historia_produktow.id_m IN(SELECT magazyny.id_m FROM magazyny WHERE nazwa='" + nazwa + "')";
                String query2 = "UPDATE produkty INNER JOIN historia_produktow ON historia_produktow.id_p = produkty.id_p SET usuniety=0 WHERE historia_produktow.id_m IN(SELECT magazyny.id_m FROM magazyny WHERE nazwa='" + nazwa + "')";
                String query3 = "UPDATE magazyny SET usuniety=1 WHERE id_m='" + id + "'";
                String query4 = "UPDATE magazyny SET usuniety=0 WHERE id_m='" + id + "'";
                PreparedStatement usun;
                try {
                    con.setAutoCommit(false);
                    if (czyZablok.equals("Nie")) {
                        usun = con.prepareStatement(query1);
                        usun.executeUpdate();
                        usun = con.prepareStatement(query3);
                        usun.executeUpdate();
                    } else {
                        usun = con.prepareStatement(query2);
                        usun.executeUpdate();
                        usun = con.prepareStatement(query4);
                        usun.executeUpdate();
                    }
                    con.commit();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Błąd zapytania!", "Błąd!", 2);
                }
            }
        }
    }//GEN-LAST:event_pUsunPrzywrocMagazynMouseClicked

    private void pListaDostawcowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pListaDostawcowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pListaDostawcowActionPerformed

    private void pDodajDostawceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDodajDostawceMouseClicked
        FormDodajEdytujDostawce FDD = new FormDodajEdytujDostawce(con);
        FDD.setVisible(true);
    }//GEN-LAST:event_pDodajDostawceMouseClicked

    private void pWyszukaj2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pWyszukaj2MouseClicked
        pokaz_liste_dostawcow(1);
    }//GEN-LAST:event_pWyszukaj2MouseClicked

    private void pEdytujDostawceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pEdytujDostawceMouseClicked
        if (tabelaDostawcy.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz wiersz do edycji! ", "Błąd!", 2);
        } else if (!edycja_otwarta && tabelaDostawcy.getSelectedRow() != -1) { // okno edycji jest juz otwarte

            FormDodajEdytujDostawce FDD = new FormDodajEdytujDostawce(con, tabelaDostawcy);
            FDD.setVisible(true);
            edycja_otwarta = true;
        } else {
            JOptionPane.showMessageDialog(this, "Możesz edytować tylko jedenego dostawce na raz!", "Błąd!", 2);
        }
    }//GEN-LAST:event_pEdytujDostawceMouseClicked

    private void pZablokujOdblokujDostawceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pZablokujOdblokujDostawceMouseClicked
        if (tabelaDostawcy.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz magazyn do zablokowania/odblokowania! ", "Błąd!", 2);
        } else {

            DefaultTableModel model = (DefaultTableModel) tabelaDostawcy.getModel();
            int wiersz = tabelaDostawcy.getSelectedRow();
            String id = model.getValueAt(wiersz, 0).toString();
            String nazwa = model.getValueAt(wiersz, 1).toString();
            String czyZablok = model.getValueAt(wiersz, 8).toString();

            Object[] opcje = {"Tak", "Nie"};
            int czy_napewno = JOptionPane.showOptionDialog(this, "Czy napewno chcesz zablokować/odblokować wiersz o ID: " + id + " i nazwie: " + nazwa
                    + "\nZablokowanie dostawcy spowoduje brak mozliwosci przypisywania do niego produktów!", "Blokowanie/Odblokowywanie", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno == 0) {
                String query1 = "UPDATE dostawcy SET zablokowany=1 WHERE id_d='" + id + "'";
                String query2 = "UPDATE dostawcy SET zablokowany=0 WHERE id_d='" + id + "'";
                PreparedStatement usun;
                try {
                    if (czyZablok.equals("Nie")) {
                        usun = con.prepareStatement(query1);
                    } else {
                        usun = con.prepareStatement(query2);
                    }
                    usun.executeUpdate();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Błąd zapytania!", "Błąd!", 2);
                }
            }
        }
    }//GEN-LAST:event_pZablokujOdblokujDostawceMouseClicked

    private void pPrzywrocProduktMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPrzywrocProduktMouseClicked
        if (tabelaHistoria.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz wiersz do przywrócenia! ", "Błąd!", 2);
        } else {

            DefaultTableModel model = (DefaultTableModel) tabelaHistoria.getModel();
            int wiersz = tabelaHistoria.getSelectedRow();
            String id = model.getValueAt(wiersz, 0).toString();
            String nazwa = model.getValueAt(wiersz, 1).toString();
            DateFormat df = new SimpleDateFormat("yyy-MM-dd");
            Date data = new Date();

            Object[] opcje = {"Tak", "Nie"};
            int czy_napewno = JOptionPane.showOptionDialog(this, "Czy napewno chcesz usunąć wiersz o ID: " + id + " i nazwie: " + nazwa, "Usuwanie", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno == 0) {
                String query1 = "UPDATE produkty SET usuniety=0 WHERE id_p='" + id + "'";
                String query2 = "UPDATE historia_produktow SET data_wydania='" + df.format(data) + "'" + "WHERE id_p='" + id + "'";
                PreparedStatement usun;
                try {
                    con.setAutoCommit(false);
                    usun = con.prepareStatement(query1);
                    usun.executeUpdate();
                    usun = con.prepareStatement(query2);
                    usun.executeUpdate();
                    con.commit();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Błąd zapytania!", "Błąd!", 2);
                }
            }
        }
    }//GEN-LAST:event_pPrzywrocProduktMouseClicked

    private void pWyszukaj3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pWyszukaj3MouseClicked
        pokaz_liste_produktow(2);
    }//GEN-LAST:event_pWyszukaj3MouseClicked

    private void pDokumentyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDokumentyMouseClicked
        pokaz_liste_dokumentow();
        panelDokumenty.setVisible(true);
        panelStartowy.setVisible(false);

//        ListaDokumentow ld = new ListaDokumentow(con, 12);
//        generujDokument(ld);

    }//GEN-LAST:event_pDokumentyMouseClicked

    private void przyciskOpcjeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskOpcjeMouseClicked
        panelProdukty.setVisible(false);
        panelMagazyny.setVisible(false);
        panelDostawcy.setVisible(false);
        panelHistoria.setVisible(false);
        panelStatystyki.setVisible(false);
        panelDokumenty.setVisible(false);
        panelStartowy.setVisible(false);
        panelOpcjeAdmin.setVisible(false);
        panelOpcje.setVisible(true);
        pokaz_dane_uzytk();
    }//GEN-LAST:event_przyciskOpcjeMouseClicked

    private void pOpcjeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pOpcjeMouseClicked
        panelOpcje.setVisible(true);
        panelStartowy.setVisible(false);
        pokaz_dane_uzytk();
    }//GEN-LAST:event_pOpcjeMouseClicked

    private void pZmienHasloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pZmienHasloMouseClicked
        FormZmienHaslo ZH = new FormZmienHaslo(con, daneUzytk, this);
        ZH.setVisible(true);
    }//GEN-LAST:event_pZmienHasloMouseClicked

    private void pZmienLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pZmienLoginMouseClicked
        FormZmienLogin ZL = new FormZmienLogin(daneUzytk, con, this);
        ZL.setVisible(true);
    }//GEN-LAST:event_pZmienLoginMouseClicked

    private void pNotatkiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pNotatkiMouseClicked
        FormNotatki NN = new FormNotatki(con, daneUzytk);
        NN.setVisible(true);
    }//GEN-LAST:event_pNotatkiMouseClicked

    private void pZglosBladMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pZglosBladMouseClicked
        FormZglosBlad ZB = new FormZglosBlad(con, daneUzytk);
        ZB.setVisible(true);
    }//GEN-LAST:event_pZglosBladMouseClicked

    private void przyciskAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskAdminMouseClicked
        panelOpcjeAdmin.setVisible(true);
        panelProdukty.setVisible(false);
        panelMagazyny.setVisible(false);
        panelDostawcy.setVisible(false);
        panelHistoria.setVisible(false);
        panelStatystyki.setVisible(false);
        panelDokumenty.setVisible(false);
        panelOpcje.setVisible(false);
        panelStartowy.setVisible(false);
        pokaz_liste_bledow();
        pokaz_statystyki_admin();
        Thread loadingThread = new Thread(new Runnable() {
            @Override
            public void run() {
                for (int i = 0; i <= 100; i++) {
                    try {
                        Thread.sleep(10);
                        if (i == 100) {
                            poleProgresBar3.setVisible(false);
                            renderWykresSlupkowy(2);

                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e, "Błąd!", 2);
                    }
                }
            }
        });

        loadingThread.start();


    }//GEN-LAST:event_przyciskAdminMouseClicked

    private void pPriorytetowyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPriorytetowyMouseClicked
        obslugaTabeliBledow(4);
        renderWykresSlupkowy(2);
    }//GEN-LAST:event_pPriorytetowyMouseClicked

    private void pNeutralnyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pNeutralnyMouseClicked
        obslugaTabeliBledow(3);
        renderWykresSlupkowy(2);
    }//GEN-LAST:event_pNeutralnyMouseClicked

    private void pRozpatrzonyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pRozpatrzonyMouseClicked
        obslugaTabeliBledow(1);
        renderWykresSlupkowy(2);
    }//GEN-LAST:event_pRozpatrzonyMouseClicked

    private void pZamknijSystemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pZamknijSystemMouseClicked

        Object[] opcje = {"Tak", "Nie"};
        int czy_napewno = 1;
        int czy_napewno2 = 1;

        if (KS.getStatus() == 1) {
            czy_napewno = JOptionPane.showOptionDialog(null, "Czy napewno chcesz się zamknąć system?", "Zamykanie systemu", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno == 0) {
                KS.setStatus(0);
            }
        } else {
            czy_napewno2 = JOptionPane.showOptionDialog(null, "Czy napewno chcesz się otworzyc system?", "Otwieranie systemu", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno2 == 0) {
                KS.setStatus(1);
            }
        }
        KS.aktualizujDane();
        pokaz_statystyki_admin();
    }//GEN-LAST:event_pZamknijSystemMouseClicked

    private void pDodajUzytkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDodajUzytkMouseClicked
        FormDodajEdytujUzytkownika FDU = new FormDodajEdytujUzytkownika(con);
        FDU.setVisible(true);
    }//GEN-LAST:event_pDodajUzytkMouseClicked

    private void pEdytujUzytkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pEdytujUzytkMouseClicked
        FormEdytujUzytkownika FEU = new FormEdytujUzytkownika(con);
        FEU.setVisible(true);
    }//GEN-LAST:event_pEdytujUzytkMouseClicked

    private void pKonfiguracjaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pKonfiguracjaMouseClicked
        FormKonfiguracjaSys FKS = new FormKonfiguracjaSys(con, KS, this);
        FKS.setVisible(true);

    }//GEN-LAST:event_pKonfiguracjaMouseClicked

    private void pDodajUzytkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDodajUzytkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pDodajUzytkActionPerformed

    private void pDodajDokumentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDodajDokumentMouseClicked
        FormDodajDokument FDD = new FormDodajDokument(con, this);
        FDD.setVisible(true);
    }//GEN-LAST:event_pDodajDokumentMouseClicked

    private void pDodajDokumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDodajDokumentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pDodajDokumentActionPerformed

    private void pDodajDokument1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDodajDokument1MouseClicked
        DefaultTableModel model = (DefaultTableModel) tabelaDokumenty.getModel();
        int wiersz = tabelaDokumenty.getSelectedRow();

        String id_d = model.getValueAt(wiersz, 0).toString();

        PreparedStatement pobierz;

        String query = "UPDATE dokumenty SET usuniety=1 WHERE id_do='" + id_d + "'";

        try {
            pobierz = con.prepareStatement(query);
            pobierz.executeUpdate();
            pokaz_liste_dokumentow();
            JOptionPane.showMessageDialog(this, "Dokument został usuniety!", "Usuwanie dokumentu", 2);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex, "Błąd!", 2);
        }

    }//GEN-LAST:event_pDodajDokument1MouseClicked

    private void pDodajDokument1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDodajDokument1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pDodajDokument1ActionPerformed

    private void pDokumentyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pDokumentyMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pDokumentyMouseEntered

    private void tabelaDokumentyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDokumentyMouseClicked
        if (evt.getClickCount() == 2) {

            DefaultTableModel model = (DefaultTableModel) tabelaDokumenty.getModel();
            int wiersz = tabelaDokumenty.getSelectedRow();

            String id_d = model.getValueAt(wiersz, 0).toString();

            PreparedStatement pobierz;
            ResultSet wynik;

            ArrayList<String> idprod = new ArrayList<String>();
            String query = "SELECT id_p FROM pozycje WHERE id_d='" + id_d + "'";

            try {
                pobierz = con.prepareStatement(query);
                wynik = pobierz.executeQuery();
                while (wynik.next()) {
                    idprod.add(wynik.getString("id_p"));
                }
            } catch (SQLException ex) {
                System.out.println(ex);
            }

            ListaDokumentow ld = new ListaDokumentow(con, Integer.parseInt(id_d));

            ArrayList<ListaProduktow> lp = new ArrayList<ListaProduktow>();

            for (String s : idprod) {
                lp.add(new ListaProduktow(con, Integer.parseInt(s)));
            }
            generujDokument(ld, lp);

    }//GEN-LAST:event_tabelaDokumentyMouseClicked
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormGlowny.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormGlowny.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormGlowny.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormGlowny.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormGlowny().setVisible(true);
            }
        });
    }

    /**
     *
     * @param wer - 0 wersja standardorwa, 1 - wersja dla przycisku szukaj
     * @return
     */
    public ArrayList<ListaProduktow> listaProd(int wer) {
        ArrayList<ListaProduktow> lp = new ArrayList<>();
        PreparedStatement pobierzProdukty1;
        ResultSet wpp1; //wynikiPobierzProdukty1
        String wersja = " AND produkty.usuniety=0"; // Dodatkowy argument do query w przypadku uzycia opcji "szukaj"
        if (wer == 1) {
            wersja += " AND produkty.nazwa LIKE " + "'%" + poleWyszukiwanie3.getText() + "%'";
        }
        if (wer == 2) {
            wersja = " AND produkty.usuniety=1 AND produkty.nazwa LIKE " + "'%" + poleWyszukiwanie3.getText() + "%'";
        }

        try {
            String query1 = "SELECT produkty.id_p,produkty.nazwa nazwap, produkty.nazwa_skr,typy_produktow.nazwa nazwat, produkty.jdm,produkty.ilosc, "
                    + "magazyny.nazwa nazwam, historia_produktow.sektor, historia_produktow.data_dostawy, historia_produktow.data_wydania, dostawcy.nazwa nazwad, "
                    + "produkty.cena FROM produkty, typy_produktow, magazyny, historia_produktow, dostawcy WHERE produkty.id_p = historia_produktow.id_p AND "
                    + "produkty.id_t = typy_produktow.id_t AND historia_produktow.id_m = magazyny.id_m AND produkty.id_d = dostawcy.id_d " + wersja + " ORDER BY id_p";
            pobierzProdukty1 = con.prepareStatement(query1);
            wpp1 = pobierzProdukty1.executeQuery(query1);

            ListaProduktow lp_;
            while (wpp1.next()) {
                lp_ = new ListaProduktow(con, wpp1.getInt("id_p"), wpp1.getDouble("ilosc"), wpp1.getInt("sektor"), wpp1.getDouble("cena"), wpp1.getString("nazwap"), wpp1.getString("nazwa_skr"), wpp1.getString("jdm"), wpp1.getString("nazwat"), wpp1.getString("nazwad"),
                        wpp1.getString("nazwam"), wpp1.getString("data_dostawy"), wpp1.getString("data_wydania"));
                lp.add(lp_);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }

        return lp;
    }

    public ArrayList<ListaMagazynow> listaMagaz(int wer) {
        ArrayList<ListaMagazynow> lm = new ArrayList<>();
        PreparedStatement pobierzMagazyny;
        ResultSet wpm; //wynikiPobierzMagazyny
        String wersja = ""; // Dodatkowy argument do query w przypadku uzycia opcji "szukaj"
        if (wer == 1) {
            wersja = " AND nazwa LIKE " + "'%" + poleWyszukiwanie1.getText() + "%'";
        }

        try {
            String query1 = "SELECT id_m,nazwa, ulica, miasto, kod_pocztowy, ilosc_sektorow, wojewodztwa.wojewodztwo, zablokowany, usuniety FROM magazyny,wojewodztwa WHERE magazyny.kod_w = wojewodztwa.kod_w" + wersja + " ORDER BY id_m";
            pobierzMagazyny = con.prepareStatement(query1);
            wpm = pobierzMagazyny.executeQuery(query1);

            ListaMagazynow lm_;
            while (wpm.next()) {
                lm_ = new ListaMagazynow(con, wpm.getInt("id_m"), wpm.getString("nazwa"), wpm.getString("ulica"), wpm.getString("miasto"), wpm.getString("kod_pocztowy"), wpm.getInt("ilosc_sektorow"), wpm.getString("wojewodztwo"), wpm.getInt("zablokowany"), wpm.getInt("usuniety"));
                lm.add(lm_);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }

        return lm;
    }

    public ArrayList<ListaDostawcow> listaDost(int wer) {
        ArrayList<ListaDostawcow> ld = new ArrayList<>();
        PreparedStatement pobierzDostawcy;
        ResultSet wpd; //wynikiPobierzDostawcy
        String wersja = ""; // Dodatkowy argument do query w przypadku uzycia opcji "szukaj"
        if (wer == 1) {
            wersja = " WHERE dostawcy.nazwa LIKE " + "'%" + poleWyszukiwanie2.getText() + "%'";
        }

        try {
            String query1 = "SELECT dostawcy.id_d, dostawcy.nazwa,dostawcy.ulica, dostawcy.miasto, dostawcy.kod_pocztowy,wojewodztwa.wojewodztwo, dostawcy.nip, dostawcy.zablokowany, COUNT(produkty.id_d) AS ilosc FROM dostawcy LEFT JOIN produkty ON produkty.id_d = dostawcy.id_d LEFT JOIN wojewodztwa ON dostawcy.kod_w = wojewodztwa.kod_w" + wersja + " GROUP BY dostawcy.nazwa";
            pobierzDostawcy = con.prepareStatement(query1);
            wpd = pobierzDostawcy.executeQuery(query1);

            ListaDostawcow ld_;
            while (wpd.next()) {
                ld_ = new ListaDostawcow(con, wpd.getInt("id_d"), wpd.getString("nazwa"), wpd.getString("ulica"), wpd.getString("miasto"), wpd.getString("kod_pocztowy"), wpd.getString("wojewodztwo"), wpd.getString("nip"), wpd.getInt("ilosc"), wpd.getInt("zablokowany"));
                ld.add(ld_);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }

        return ld;
    }

    public ArrayList<ListaBledow> listaBledow() {
        ArrayList<ListaBledow> lb = new ArrayList<>();
        PreparedStatement pobierzBledy;
        ResultSet wynikBledy;
        try {
            String query = "SELECT id_b, uzytkownicy.login, tytul,data_zgloszenia,opis,status,id_s FROM zgloszone_bledy NATURAL JOIN uzytkownicy NATURAL JOIN statusy_bledow ORDER BY id_s DESC";
            pobierzBledy = con.prepareStatement(query);
            wynikBledy = pobierzBledy.executeQuery();

            ListaBledow lb_;
            while (wynikBledy.next()) {
                lb_ = new ListaBledow(con, wynikBledy.getInt("id_b"), wynikBledy.getString("login"), wynikBledy.getString("tytul"), wynikBledy.getString("data_zgloszenia"), wynikBledy.getString("opis"), wynikBledy.getString("status"));
                lb.add(lb_);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }

        return lb;
    }

    public ArrayList<ListaDokumentow> listaDok() {
        ArrayList<ListaDokumentow> ld = new ArrayList();
        PreparedStatement pobierzDok;
        ResultSet wynikDok;

        try {
            String query = "SELECT id_do, typy_dokumentow.nazwa, numer, data_wydania FROM dokumenty NATURAL JOIN typy_dokumentow WHERE usuniety=0";
            pobierzDok = con.prepareStatement(query);
            wynikDok = pobierzDok.executeQuery();
            ListaDokumentow ld_;
            while (wynikDok.next()) {
                ld_ = new ListaDokumentow(wynikDok.getInt("id_do"), wynikDok.getString("nazwa"), wynikDok.getString("numer"), wynikDok.getString("data_wydania"));
                ld.add(ld_);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }
        return ld;
    }

    public void pokaz_liste_produktow(int wer) {
        ArrayList<ListaProduktow> lista;
        DefaultTableModel model;
        if (wer == 2) { // dla historii produktow
            lista = listaProd(wer);
            model = (DefaultTableModel) tabelaHistoria.getModel();

        } else { // dla listy produktow
            lista = listaProd(wer);
            model = (DefaultTableModel) tabelaProdukty.getModel();

        }
        model.setRowCount(0);

        Object[] tabela = new Object[12];
        for (int i = 0; i < lista.size(); i++) {
            tabela[0] = lista.get(i).getId();
            tabela[1] = lista.get(i).getNazwa();
            tabela[2] = lista.get(i).getNazwa_skr();
            tabela[3] = lista.get(i).getTyp();
            tabela[4] = lista.get(i).getJdm();
            tabela[5] = lista.get(i).getIlosc();
            tabela[6] = lista.get(i).getMagazyn();
            tabela[7] = lista.get(i).getSektor();
            tabela[8] = lista.get(i).getData_dostawy();
            if (lista.get(i).getData_wydania().equals("0000-00-00")) {
                tabela[9] = "Brak";
            } else {
                tabela[9] = lista.get(i).getData_wydania();
            }
            tabela[10] = lista.get(i).getDostawca();
            tabela[11] = lista.get(i).getCena() + " zł";
            // tabela.setAutoCreateRowSorter(true);
            model.addRow(tabela);
            //model.setRowColour(1,Color.YELLOW);
        }

    }

    public void pokaz_liste_magazynow(int wer) {
        ArrayList<ListaMagazynow> lista = listaMagaz(wer);
        DefaultTableModel model = (DefaultTableModel) tabelaMagazyny.getModel();
        model.setRowCount(0);
        Object[] tabela = new Object[9];
        for (int i = 0; i < lista.size(); i++) {
            tabela[0] = lista.get(i).getId();
            tabela[1] = lista.get(i).getNazwa();
            tabela[2] = lista.get(i).getUlica();
            tabela[3] = lista.get(i).getMiasto();
            tabela[4] = lista.get(i).getWojewodztwo();
            tabela[5] = lista.get(i).getKod_poczt();
            tabela[6] = lista.get(i).getSektory();
            if (lista.get(i).getZablokowany() == 1) {
                tabela[7] = "Tak";
            } else {
                tabela[7] = "Nie";
            }
            if (lista.get(i).getUsuniety() == 1) {
                tabela[8] = "Tak";
            } else {
                tabela[8] = "Nie";
            }
            model.addRow(tabela);
        }
    }

    public void pokaz_liste_dostawcow(int wer) {
        ArrayList<ListaDostawcow> lista = listaDost(wer);
        DefaultTableModel model = (DefaultTableModel) tabelaDostawcy.getModel();
        model.setRowCount(0);
        Object[] tabela = new Object[9];
        for (int i = 0; i < lista.size(); i++) {
            tabela[0] = lista.get(i).getId();
            tabela[1] = lista.get(i).getNazwa();
            tabela[2] = lista.get(i).getUlica();
            tabela[3] = lista.get(i).getMiasto();
            tabela[4] = lista.get(i).getKod_poczt();
            tabela[5] = lista.get(i).getWojewodztwo();
            tabela[6] = lista.get(i).getNip();
            tabela[7] = lista.get(i).getIlosc_prod();
            if (lista.get(i).getZablokowany() == 1) {
                tabela[8] = "Tak";
            } else {
                tabela[8] = "Nie";
            }
            model.addRow(tabela);
        }
    }

    public void pokaz_liste_bledow() {
        ArrayList<ListaBledow> lista = listaBledow();
        DefaultTableModel model = (DefaultTableModel) tabelaBledy.getModel();
        model.setRowCount(0);

        tabelaBledy.getColumnModel().getColumn(4).setCellRenderer(new MultiLineTable());

        Object[] tabela = new Object[6];
        for (int i = 0; i < lista.size(); i++) {
            tabela[0] = lista.get(i).getId_b();
            tabela[1] = lista.get(i).getLogin_u();
            tabela[2] = lista.get(i).getTytul();
            tabela[3] = lista.get(i).getData();
            tabela[4] = lista.get(i).getOpis();
            tabela[5] = lista.get(i).getStatus();

            model.addRow(tabela);

        }
    }

    public void pokaz_liste_dokumentow() {
        ArrayList<ListaDokumentow> lista = listaDok();
        DefaultTableModel model = (DefaultTableModel) tabelaDokumenty.getModel();
        model.setRowCount(0);

        Object[] tabela = new Object[4];
        for (int i = 0; i < lista.size(); i++) {
            tabela[0] = lista.get(i).getID();
            tabela[1] = lista.get(i).getTyp();
            tabela[2] = lista.get(i).getNumer();
            tabela[3] = lista.get(i).getData_wyst();
            model.addRow(tabela);
        }
        podgladDokumentu.setText("");
    }

    public void pokaz_statystyki() {
        PreparedStatement pobierzStaty;
        ResultSet wynikStaty;
        String query = "SELECT (SELECT COUNT(*) FROM produkty WHERE usuniety=0 ) as produkty_stan, "
                + "(SELECT COUNT(*) FROM produkty WHERE usuniety=1 ) as produkty_archiw, "
                + "(SELECT SUM(magazyny.ilosc_sektorow) FROM magazyny WHERE usuniety=0 ) as sektory,"
                + "(SELECT COUNT(*) FROM magazyny WHERE usuniety=0) as magazyny, "
                + "(SELECT COUNT(*) FROM dostawcy) as dostawcy, "
                + "(SELECT COUNT(*) FROM dostawcy) as odbiorcy, " // todo: zliczac odbiorcow!!
                + "(SELECT COUNT(*) FROM typy_produktow) as typy,"
                + "(SELECT COUNT(*) FROM dokumenty) as faktury," // todo: poprawic nazwy zmiennych
                + "(SELECT COUNT(*) FROM uzytkownicy) as uzytkownicy ";
        String query2 = "SELECT magazyny.nazwa, COUNT(historia_produktow.id_p) AS ilosc FROM produkty,magazyny,"
                + "historia_produktow WHERE produkty.id_p = historia_produktow.id_p AND magazyny.id_m = historia_produktow.id_m "
                + "GROUP BY magazyny.nazwa ORDER BY ilosc DESC ";
        String query3 = "SELECT dostawcy.nazwa, COUNT(produkty.id_d) AS ilosc FROM produkty JOIN dostawcy ON dostawcy.id_d = produkty.id_d "
                + "GROUP BY dostawcy.nazwa ORDER BY ilosc DESC";
        String query4 = "SELECT nazwa,ilosc FROM produkty WHERE jdm='szt' ORDER BY ilosc DESC";

        try {
            pobierzStaty = con.prepareStatement(query);
            wynikStaty = pobierzStaty.executeQuery(query);

            wynikStaty.next();
            poleProdStan.setText(Integer.toString(wynikStaty.getInt("produkty_stan")));
            poleProdArchiw.setText(Integer.toString(wynikStaty.getInt("produkty_archiw")));
            poleProdTyp.setText(Integer.toString(wynikStaty.getInt("typy")));
            poleSekt.setText(Integer.toString(wynikStaty.getInt("sektory")));
            poleDostawcy.setText(Integer.toString(wynikStaty.getInt("dostawcy")));
            poleOdbiorcy.setText(Integer.toString(wynikStaty.getInt("odbiorcy")));
            poleFaktury.setText(Integer.toString(wynikStaty.getInt("faktury")));
            poleUzytk.setText(Integer.toString(wynikStaty.getInt("uzytkownicy")));
            poleMagazyny.setText(Integer.toString(wynikStaty.getInt("magazyny")));

            wynikStaty = pobierzStaty.executeQuery(query2);
            wynikStaty.next();
            poleNajlepszyMag.setText(wynikStaty.getString(1) + " - " + Integer.toString(wynikStaty.getInt(2)) + " produktów!");
            wynikStaty = pobierzStaty.executeQuery(query3);
            wynikStaty.next();
            poleNajlepszyDostawca.setText(wynikStaty.getString(1) + " - " + Integer.toString(wynikStaty.getInt(2)) + " produktów!");
            wynikStaty = pobierzStaty.executeQuery(query4);
            wynikStaty.next();
            poleNajlepszyProdukt.setText(wynikStaty.getString(1) + " - " + Integer.toString(wynikStaty.getInt(2)) + " szt!");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }
    }

    public DefaultCategoryDataset daneWykresObszarowy() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        String[] miesiace = {"Sty", "Lut", "Mar", "Kwi", "Maj", "Cze", "Lip", "Sie", "Wrz", "Paz", "Lis", "Gru"};
        String query = "SELECT COUNT(*) FROM historia_produktow WHERE historia_produktow.data_dostawy BETWEEN ? AND ?";
        DateFormat df = new SimpleDateFormat("yyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DAY_OF_YEAR, 1);

        PreparedStatement pobIloscProd = null;
        ResultSet iloscProd = null;

        Date start = cal.getTime();

        try {
            pobIloscProd = con.prepareStatement(query);

            for (int i = 0; i < 12; i++) {

                /* Pierwszy dzien miesiaca */
                cal.set(Calendar.MONTH, i);
                pobIloscProd.setString(1, df.format(start));
                cal.add(Calendar.MONTH, 1);
                cal.add(Calendar.DAY_OF_MONTH, -1);
                start = cal.getTime();

                /* Ostatni dzien miesiaca */
                pobIloscProd.setString(2, df.format(start));
                cal.add(Calendar.DAY_OF_MONTH, 1);
                start = cal.getTime();
                iloscProd = pobIloscProd.executeQuery();

                iloscProd.next();
                dataset.addValue(iloscProd.getInt(1), "Produkty", miesiace[i]);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "Błąd!", 2);
        }

        return dataset;
    }

    public DefaultCategoryDataset daneWykresSlupkowy() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        Map<String, String> magazyny = new TreeMap<>();
        String query = "SELECT magazyny.nazwa,COUNT(historia_produktow.id_m) AS ile FROM historia_produktow,magazyny WHERE "
                + "magazyny.id_m = historia_produktow.id_m AND magazyny.usuniety=0 GROUP BY historia_produktow.id_m ";

        try {
            PreparedStatement pobierzMagazyn;
            ResultSet wynikMagazyn;

            pobierzMagazyn = con.prepareStatement(query);
            wynikMagazyn = pobierzMagazyn.executeQuery(query);

            while (wynikMagazyn.next()) {
                magazyny.put(wynikMagazyn.getString(1), Integer.toString(wynikMagazyn.getInt(2)));
                System.out.println("");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }

        for (String key : magazyny.keySet()) {
            String val = magazyny.get(key);
            dataset.addValue(Integer.parseInt(val), "Produkty", key);
        }

        return dataset;
    }

    public DefaultCategoryDataset daneWykresSlupkowyAdmin() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        Map<String, String> statusy = new TreeMap<>();
        String query = "SELECT statusy_bledow.status, COUNT(zgloszone_bledy.id_s) FROM statusy_bledow LEFT JOIN zgloszone_bledy ON statusy_bledow.id_s=zgloszone_bledy.id_s GROUP BY statusy_bledow.status ORDER BY statusy_bledow.id_s ASC";

        try {
            PreparedStatement pobierzStatusy;
            ResultSet wynikStatusy;

            pobierzStatusy = con.prepareStatement(query);
            wynikStatusy = pobierzStatusy.executeQuery(query);

            while (wynikStatusy.next()) {
                statusy.put(wynikStatusy.getString(1), Integer.toString(wynikStatusy.getInt(2)));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "Błąd!", 2);
        }
        // 1 - rozpatrzony 2 - nierozpatrzony 3 - neutralny 4 - priorytet
        for (String key : statusy.keySet()) {
            String val = statusy.get(key);
            dataset.addValue(Integer.parseInt(val), "Status", key);
        }

        return dataset;
    }

    public void renderWykresObszarowy() {

        DefaultCategoryDataset ds = daneWykresObszarowy();
        JFreeChart chart = ChartFactory.createAreaChart("Ilość nowych produktów", "", "", ds, PlotOrientation.VERTICAL, false, true, false);

        CategoryPlot plot = chart.getCategoryPlot();
        org.jfree.chart.axis.CategoryAxis domainAxis = plot.getDomainAxis();
        org.jfree.chart.axis.ValueAxis valAxis = plot.getRangeAxis();

        chart.setBackgroundPaint(new Color(44, 62, 80));
        chart.setBorderVisible(false);
        chart.setBorderPaint(new Color(44, 62, 80));
        chart.getTitle().setPaint(Color.white);
        chart.getTitle().setFont(new java.awt.Font("Dialog", 1, 18));
        plot.setBackgroundPaint(new Color(44, 62, 80));
        plot.setDomainGridlinePaint(new Color(44, 62, 80));
        plot.setDomainGridlinesVisible(false);
        plot.setOutlinePaint(new Color(44, 62, 80));
        plot.setForegroundAlpha(0.7F);

        domainAxis.setTickLabelPaint(Color.white);
        valAxis.setTickLabelPaint(Color.white);

        ChartPanel cp = new ChartPanel(chart);
        ChartPanel cp2 = new ChartPanel(chart);
        cp.setBackground(new Color(54, 63, 73));
        cp2.setBackground(new Color(54, 63, 73));

        AreaRenderer rr = (AreaRenderer) plot.getRenderer();
        rr.setSeriesPaint(0, new Color(75, 119, 190));

        wykresObsz.add(cp, BorderLayout.CENTER);

        wykresObsz.validate();

    }

    public void renderWykresSlupkowy(int wer) {
        // wer 1 = do statystyk
        // wer 2 = do panelu admina
        DefaultCategoryDataset ds = null;
        JFreeChart chart = null;
        ChartFactory.setChartTheme(StandardChartTheme.createLegacyTheme());
        if (wer == 1) {
            ds = daneWykresSlupkowy();
            chart = ChartFactory.createBarChart("Zapełnienie magazynów", "", "", ds, PlotOrientation.VERTICAL, false, true, false);
        } else if (wer == 2) {
            ds = daneWykresSlupkowyAdmin();
            chart = ChartFactory.createBarChart("Statystyki zgłoszonych błędów", "", "", ds, PlotOrientation.VERTICAL, false, true, false);
        }

        ChartPanel cp = new ChartPanel(chart);
        CategoryPlot plot = chart.getCategoryPlot();
        org.jfree.chart.axis.CategoryAxis domainAxis = plot.getDomainAxis();
        org.jfree.chart.axis.ValueAxis valAxis = plot.getRangeAxis();

        chart.setBackgroundPaint(new Color(44, 62, 80));
        chart.setBorderVisible(false);
        chart.setBorderPaint(new Color(44, 62, 80));
        chart.getTitle().setPaint(Color.white);
        chart.getTitle().setFont(new java.awt.Font("Dialog", 1, 18));
        plot.setBackgroundPaint(new Color(44, 62, 80));
        plot.setDomainGridlinePaint(new Color(44, 62, 80));
        plot.setDomainGridlinesVisible(false);
        plot.setOutlinePaint(new Color(44, 62, 80));
        plot.setForegroundAlpha(0.7F);

        domainAxis.setTickLabelPaint(Color.white);
        valAxis.setTickLabelPaint(Color.white);

        BarRenderer rr = (BarRenderer) plot.getRenderer();
        rr.setSeriesPaint(0, new Color(75, 119, 190));
        rr.setShadowVisible(false);

        //rr.setBarPainter(new BarPainter());
        if (wer == 1) {
            wykresSlup.add(cp, BorderLayout.CENTER);
            wykresSlup.validate();
        } else if (wer == 2) {
            wykresSlupAdmin.add(cp, BorderLayout.CENTER);
            wykresSlupAdmin.validate();
        }
    }

    public void pokaz_statystyki_admin() {
        try {
            PreparedStatement pobierzStaty;
            ResultSet wynikStaty;
            String query = "SELECT ( SELECT COUNT(*) FROM uzytkownicy WHERE aktywny=1), (SELECT COUNT(*) FROM uzytkownicy), (SELECT status FROM ustawienia), (SELECT ogloszenie FROM ustawienia)";
            pobierzStaty = con.prepareStatement(query);
            wynikStaty = pobierzStaty.executeQuery();
            wynikStaty.next();
            poleAktywniUzytk.setText(wynikStaty.getString(1));
            poleIloscKont.setText(wynikStaty.getString(2));
            if (wynikStaty.getString(3).equals("0")) {
                poleStatusSys.setForeground(Color.RED);
                poleStatusSys.setText("Zamkniety");
                pZamknijSystem.setBackground(new java.awt.Color(3, 166, 120));
                pZamknijSystem.setText("  Otwórz system");

            } else {
                poleStatusSys.setForeground(Color.GREEN);
                poleStatusSys.setText("Otwarty");
                pZamknijSystem.setBackground(new java.awt.Color(246, 71, 71));
                pZamknijSystem.setText("  Zamknij system");
            }
            if (wynikStaty.getString(4).equals("1")) {
                poleWiadomosc.setForeground(Color.GREEN);
                poleWiadomosc.setText("Aktywne");
            } else {
                poleWiadomosc.setForeground(Color.RED);
                poleWiadomosc.setText("Nieaktywne");
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    public void pokaz_dane_uzytk() {

        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date obecna = new Date();
        Date poczatek = null;

        poleNazwaUzytk.setText(daneUzytk.getLogin());
        poleImie.setText(daneUzytk.getImie());
        poleNazwisko.setText(daneUzytk.getNazwisko());
        poleTypKonta.setText(daneUzytk.getTyp_konta());
        poleDataRej.setText(daneUzytk.getData_rej());

        if (daneUzytk.getZablokowany() == 0) {
            poleStatus.setText("Aktywny");
            poleStatus.setForeground(Color.green);
        } else if (daneUzytk.getZablokowany() == 1) {
            poleStatus.setText("Zablokowany");
            poleStatus.setForeground(Color.red);
        }

        try {
            poczatek = df.parse(daneUzytk.getCzasLogowania());
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        int min = (int) (obecna.getTime() - poczatek.getTime()) / 60000; // zamiana milisec na min

        poleSesja.setText(Integer.toString(min) + " min");
    }

    public void obslugaTabeliBledow(int wer) {
        if (tabelaBledy.getSelectedRow() == -1) { // -1 brak wybranego wiersza
            JOptionPane.showMessageDialog(this, "Najpierw wybierz wiersz do zmiany! ", "Błąd!", 2);
        } else {

            DefaultTableModel model = (DefaultTableModel) tabelaBledy.getModel();
            int wiersz = tabelaBledy.getSelectedRow();
            String id = model.getValueAt(wiersz, 0).toString();

            Object[] opcje = {"Tak", "Nie"};
            int czy_napewno = JOptionPane.showOptionDialog(this, "Czy napewno chcesz zmienić wiersz o ID: " + id + " ?", "Zmiana statusu", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
            if (czy_napewno == 0) {
                String query = "UPDATE zgloszone_bledy SET id_s='" + wer + "' WHERE id_b='" + id + "'";
                PreparedStatement usun;
                try {
                    usun = con.prepareStatement(query);
                    usun.executeUpdate();
                    pokaz_liste_bledow();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Błąd zapytania!", "Błąd!", 2);
                }
            }
        }
    }

    public void generujDokument(ListaDokumentow dok, ArrayList<ListaProduktow> lp) {
        podgladDokumentu.setText("");
        podgladDokumentu.append("\t\t       " + dok.getTyp_pelna());
        podgladDokumentu.append("\n\t\t              " + dok.getTyp() + " " + dok.getNumer());

        podgladDokumentu.append("\n\n\t\t\t\t Data wystawienia: " + dok.getData_wyst());
        podgladDokumentu.append("\n\t\t\t\t Miejsce wystawienia: " + dok.getNadawca().getMiasto());
        podgladDokumentu.append("\n\n====================================================================================\n");

        podgladDokumentu.append("\tNADAWCA:\t\t\tODBIORCA:\n");
        podgladDokumentu.append("\t" + dok.getNadawca().getNazwa() + "\t\t\t" + dok.getOdbiorca().getNazwa()
                + "\n\t" + dok.getNadawca().getUlica() + "\t\t\t" + dok.getOdbiorca().getUlica()
                + "\n\t" + dok.getNadawca().getMiasto() + " " + dok.getNadawca().getKod_poczt() + "\t\t" + dok.getOdbiorca().getMiasto() + " " + dok.getOdbiorca().getKod_poczt()
                + "\n\t" + dok.getNadawca().getWojewodztwo() + "\t\t\t" + dok.getOdbiorca().getWojewodztwo());
        podgladDokumentu.append("\n====================================================================================\n\n");

        podgladDokumentu.append("Lp.\tNazwa produktu\t\tJDM\tIlosc\tWartosc     ");
        podgladDokumentu.append("\n-------------------------------------------------------------------------------------------------------------------------------------------------\n");
        int i = 1;
        String sp1 = "\t\t\t";
        String sp2 = "\t\t";
        double wartosc_calk = 0;
        for (ListaProduktow l : lp) {
            String tmp;
            if (l.getNazwa().length() > 12) {
                tmp = sp2;
            } else {
                tmp = sp1;
            }
            double tmp2 = l.getWartosc();
            wartosc_calk += tmp2;
            podgladDokumentu.append(i + "\t" + l.getNazwa() + tmp + l.getJdm() + "\t" + l.getIlosc() + "\t" + tmp2 + "     \n");
            podgladDokumentu.append("-------------------------------------------------------------------------------------------------------------------------------------------------\n");
            i++;
        }

        podgladDokumentu.append("\n\n\t\t\t\t Wartość calkowity: " + wartosc_calk + " zł");

        podgladDokumentu.append("\n\n\t Podpis wydajacego \t\t Podpis odbierajacego\n\n");
        podgladDokumentu.append("\t.......................................... \t\t ..........................................");
    }

    public void setDaneUzytk(Uzytkownik U) {
        this.daneUzytk = U;
    }

    public void setKonfiguracja(KonfiguracjaSystemu KS) {
        this.KS = KS;
    }

    public void uzupelnijPanelStartowy() {
        if (KS.getOgloszenie() == 1) {
            poleOgloszenia.setVisible(true);
            poleOgloszenia.setText(KS.getOgloszenie_tekst());
        } else {
            poleOgloszenia.setVisible(false);
        }

        poleNazwaFirmy.setText(KS.getNazwa_firmy() + " || " + KS.getStronaWWW());
        textOpisSystemu.setText(KS.getWiadomosc_powitalna());
        textStopkaL.setText(KS.getNazwa() + " " + KS.getWersja());
    }

    public void pokazPrzyciskAdmina(String uzytkownik) {
        if (uzytkownik.equals("Admin") || uzytkownik.equals("Administrator")) {
            przyciskAdmin.setVisible(true);
        } else {
            przyciskAdmin.setVisible(false);
        }
    }

    public void setNazwaUzytkownika(String uzytkownik) {
        textUzytkownik.setText(uzytkownik);
    }

    public static void setEdycjaOtwarta(boolean i) {
        edycja_otwarta = i;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel OpcjeStart;
    private keeptoo.KGradientPanel gradientGlowny;
    private keeptoo.KGradientPanel gradientNaglowek;
    private keeptoo.KGradientPanel gradientStopka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton pDodajDokument;
    private javax.swing.JButton pDodajDokument1;
    private javax.swing.JButton pDodajDostawce;
    private javax.swing.JButton pDodajMagazyn;
    private javax.swing.JButton pDodajProdukt;
    private javax.swing.JButton pDodajUzytk;
    private javax.swing.JButton pDokumenty;
    private javax.swing.JButton pEdytujDostawce;
    private javax.swing.JButton pEdytujMagazyn;
    private javax.swing.JButton pEdytujProdukt;
    private javax.swing.JButton pEdytujUzytk;
    private javax.swing.JButton pHistoriaProduktow;
    private javax.swing.JButton pKonfiguracja;
    private javax.swing.JButton pListaDostawcow;
    private javax.swing.JButton pListaMagazynow;
    private javax.swing.JButton pListaProduktow;
    private javax.swing.JButton pNeutralny;
    private javax.swing.JButton pNotatki;
    private javax.swing.JButton pOpcje;
    private javax.swing.JButton pPriorytetowy;
    private javax.swing.JButton pPrzywrocProdukt;
    private javax.swing.JButton pRozpatrzony;
    private javax.swing.JButton pStatystyki;
    private javax.swing.JButton pUsunProdukt;
    private javax.swing.JButton pUsunPrzywrocMagazyn;
    private javax.swing.JButton pWyloguj;
    private javax.swing.JButton pWyszukaj;
    private javax.swing.JButton pWyszukaj1;
    private javax.swing.JButton pWyszukaj2;
    private javax.swing.JButton pWyszukaj3;
    private javax.swing.JButton pZablokujOdblokujDostawce;
    private javax.swing.JButton pZablokujOdblokujMagazyn;
    private javax.swing.JButton pZamknijSystem;
    private javax.swing.JButton pZglosBlad;
    private javax.swing.JButton pZmienHaslo;
    private javax.swing.JButton pZmienLogin;
    private javax.swing.JPanel panelDokumenty;
    private javax.swing.JPanel panelDostawcy;
    private javax.swing.JPanel panelHistoria;
    private javax.swing.JPanel panelMagazyny;
    private javax.swing.JPanel panelOpcje;
    private javax.swing.JPanel panelOpcjeAdmin;
    private javax.swing.JPanel panelProdukty;
    private javax.swing.JPanel panelStartowy;
    private javax.swing.JPanel panelStatystyki;
    private javax.swing.JTextArea podgladDokumentu;
    private javax.swing.JLabel poleAktywniUzytk;
    private javax.swing.JLabel poleDataRej;
    private javax.swing.JLabel poleDostawcy;
    private javax.swing.JLabel poleFaktury;
    private javax.swing.JLabel poleIloscKont;
    private javax.swing.JLabel poleImie;
    private javax.swing.JLabel poleLogo;
    private javax.swing.JLabel poleMagazyny;
    private javax.swing.JLabel poleNajlepszyDostawca;
    private javax.swing.JLabel poleNajlepszyMag;
    private javax.swing.JLabel poleNajlepszyProdukt;
    private javax.swing.JLabel poleNazwaFirmy;
    private javax.swing.JLabel poleNazwaUzytk;
    private javax.swing.JLabel poleNazwisko;
    private javax.swing.JLabel poleOdbiorcy;
    private javax.swing.JLabel poleOgloszenia;
    private javax.swing.JLabel poleProdArchiw;
    private javax.swing.JLabel poleProdStan;
    private javax.swing.JLabel poleProdTyp;
    private javax.swing.JLabel poleProgresBar;
    private javax.swing.JLabel poleProgresBar2;
    private javax.swing.JLabel poleProgresBar3;
    private javax.swing.JLabel poleSekt;
    private javax.swing.JLabel poleSesja;
    private javax.swing.JLabel poleStatus;
    private javax.swing.JLabel poleStatusSys;
    private javax.swing.JLabel poleTypKonta;
    private javax.swing.JLabel poleUzytk;
    private javax.swing.JLabel poleWiadomosc;
    private javax.swing.JTextField poleWyszukiwanie;
    private javax.swing.JTextField poleWyszukiwanie1;
    private javax.swing.JTextField poleWyszukiwanie2;
    private javax.swing.JTextField poleWyszukiwanie3;
    private javax.swing.JButton przyciskAdmin;
    private javax.swing.JButton przyciskDom;
    private javax.swing.JButton przyciskOpcje;
    private javax.swing.JTable tabelaBledy;
    private javax.swing.JTable tabelaDokumenty;
    private javax.swing.JTable tabelaDostawcy;
    private javax.swing.JTable tabelaHistoria;
    private javax.swing.JTable tabelaMagazyny;
    private javax.swing.JTable tabelaProdukty;
    private javax.swing.JLabel textAktywniUzytk;
    private javax.swing.JLabel textDataRej;
    private javax.swing.JLabel textDostawcy;
    private javax.swing.JLabel textFaktury;
    private javax.swing.JLabel textIloscKont;
    private javax.swing.JLabel textImie;
    private javax.swing.JLabel textMagazyny;
    private javax.swing.JLabel textMinimalizuj;
    private javax.swing.JLabel textNaglowek;
    private javax.swing.JLabel textNajlepszyDostawca;
    private javax.swing.JLabel textNajlepszyMag;
    private javax.swing.JLabel textNajlepszyProdukt;
    private javax.swing.JLabel textNazwaUzytk;
    private javax.swing.JLabel textNazwisko;
    private javax.swing.JLabel textOdbiorcy;
    private javax.swing.JLabel textOpisSystemu;
    private javax.swing.JLabel textProdArchiw;
    private javax.swing.JLabel textProdStan;
    private javax.swing.JLabel textProdTyp;
    private javax.swing.JLabel textSekt;
    private javax.swing.JLabel textSesja;
    private javax.swing.JLabel textStatus;
    private javax.swing.JLabel textStatusSys;
    private javax.swing.JLabel textStopkaL;
    private javax.swing.JLabel textStopkaP;
    private javax.swing.JLabel textTypKonta;
    private javax.swing.JLabel textUzytk;
    private javax.swing.JLabel textUzytkownik;
    private javax.swing.JLabel textWiadomosc;
    private javax.swing.JLabel textWyjscie;
    private javax.swing.JPanel tloDane;
    private javax.swing.JPanel tloDane2;
    private javax.swing.JPanel tloPrzyciskiTabela;
    private javax.swing.JPanel tloStatystyki;
    private javax.swing.JPanel wykresObsz;
    private javax.swing.JPanel wykresSlup;
    private javax.swing.JPanel wykresSlupAdmin;
    // End of variables declaration//GEN-END:variables

}
