/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularze;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Marcin
 */
public class FormDodajDokument extends javax.swing.JFrame {

    private int xMouse;
    private int yMouse;
    private FormGlowny FG;
    private static Connection con;

    /**
     * Creates new form FormDodajDokument
     */
    public FormDodajDokument(Connection con, FormGlowny FG) {
        this.con = con;
        this.FG=FG;
        initComponents();
        wypelnijDane();
        this.setLocationRelativeTo(null);
    }

    public FormDodajDokument() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gradientNaglowek = new keeptoo.KGradientPanel();
        textWyjscie = new javax.swing.JLabel();
        textMinimalizuj = new javax.swing.JLabel();
        textNaglowek = new javax.swing.JLabel();
        gradientGlowny = new keeptoo.KGradientPanel();
        poleIDProd = new javax.swing.JTextField();
        textOpis = new javax.swing.JLabel();
        textNumer = new javax.swing.JLabel();
        przyciskWyslij = new javax.swing.JButton();
        przyciskAnuluj = new javax.swing.JButton();
        textTyp = new javax.swing.JLabel();
        poleWyborTyp = new javax.swing.JComboBox<>();
        textNadawca = new javax.swing.JLabel();
        poleWyborNadawca = new javax.swing.JComboBox<>();
        textOdbiorca = new javax.swing.JLabel();
        poleWyborOdbiorca = new javax.swing.JComboBox<>();
        poleNumer = new javax.swing.JTextField();
        gradientStopka = new keeptoo.KGradientPanel();
        textStopkaL = new javax.swing.JLabel();
        textStopkaP = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gradientNaglowek.setkEndColor(new java.awt.Color(65, 131, 215));
        gradientNaglowek.setkGradientFocus(600);
        gradientNaglowek.setkStartColor(new java.awt.Color(58, 83, 155));
        gradientNaglowek.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                gradientNaglowekMouseDragged(evt);
            }
        });
        gradientNaglowek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gradientNaglowekMousePressed(evt);
            }
        });

        textWyjscie.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        textWyjscie.setForeground(new java.awt.Color(255, 255, 255));
        textWyjscie.setText("X");
        textWyjscie.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textWyjscie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textWyjscieMouseClicked(evt);
            }
        });

        textMinimalizuj.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        textMinimalizuj.setForeground(new java.awt.Color(255, 255, 255));
        textMinimalizuj.setText("-");
        textMinimalizuj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textMinimalizuj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textMinimalizujMouseClicked(evt);
            }
        });

        textNaglowek.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNaglowek.setForeground(new java.awt.Color(255, 255, 255));
        textNaglowek.setText("GENEROWANIE DOKUMENTU");

        javax.swing.GroupLayout gradientNaglowekLayout = new javax.swing.GroupLayout(gradientNaglowek);
        gradientNaglowek.setLayout(gradientNaglowekLayout);
        gradientNaglowekLayout.setHorizontalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientNaglowekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textNaglowek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textWyjscie)
                .addGap(21, 21, 21))
        );
        gradientNaglowekLayout.setVerticalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientNaglowekLayout.createSequentialGroup()
                .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textWyjscie)
                    .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNaglowek))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        getContentPane().add(gradientNaglowek, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 50));

        gradientGlowny.setkEndColor(new java.awt.Color(44, 62, 80));
        gradientGlowny.setkStartColor(new java.awt.Color(44, 62, 80));

        poleIDProd.setBackground(new java.awt.Color(108, 122, 137));
        poleIDProd.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        poleIDProd.setForeground(new java.awt.Color(255, 255, 255));
        poleIDProd.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        textOpis.setBackground(new java.awt.Color(65, 131, 215));
        textOpis.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textOpis.setForeground(new java.awt.Color(105, 163, 237));
        textOpis.setText("ID produkt√≥w:");

        textNumer.setBackground(new java.awt.Color(65, 131, 215));
        textNumer.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNumer.setForeground(new java.awt.Color(105, 163, 237));
        textNumer.setText("Numer:");

        przyciskWyslij.setBackground(new java.awt.Color(75, 119, 190));
        przyciskWyslij.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        przyciskWyslij.setForeground(new java.awt.Color(255, 255, 255));
        przyciskWyslij.setText("Generuj");
        przyciskWyslij.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskWyslijMouseClicked(evt);
            }
        });
        przyciskWyslij.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskWyslijActionPerformed(evt);
            }
        });

        przyciskAnuluj.setBackground(new java.awt.Color(246, 71, 71));
        przyciskAnuluj.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        przyciskAnuluj.setForeground(new java.awt.Color(255, 255, 255));
        przyciskAnuluj.setText("Anuluj");
        przyciskAnuluj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskAnulujMouseClicked(evt);
            }
        });

        textTyp.setBackground(new java.awt.Color(65, 131, 215));
        textTyp.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textTyp.setForeground(new java.awt.Color(105, 163, 237));
        textTyp.setText("Typ:");

        poleWyborTyp.setBackground(new java.awt.Color(108, 122, 137));
        poleWyborTyp.setForeground(new java.awt.Color(108, 122, 137));

        textNadawca.setBackground(new java.awt.Color(65, 131, 215));
        textNadawca.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNadawca.setForeground(new java.awt.Color(105, 163, 237));
        textNadawca.setText("Nadawca:");

        poleWyborNadawca.setBackground(new java.awt.Color(108, 122, 137));
        poleWyborNadawca.setForeground(new java.awt.Color(108, 122, 137));

        textOdbiorca.setBackground(new java.awt.Color(65, 131, 215));
        textOdbiorca.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textOdbiorca.setForeground(new java.awt.Color(105, 163, 237));
        textOdbiorca.setText("Odbiorca:");

        poleWyborOdbiorca.setBackground(new java.awt.Color(108, 122, 137));
        poleWyborOdbiorca.setForeground(new java.awt.Color(108, 122, 137));

        poleNumer.setBackground(new java.awt.Color(108, 122, 137));
        poleNumer.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        poleNumer.setForeground(new java.awt.Color(255, 255, 255));
        poleNumer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));

        javax.swing.GroupLayout gradientGlownyLayout = new javax.swing.GroupLayout(gradientGlowny);
        gradientGlowny.setLayout(gradientGlownyLayout);
        gradientGlownyLayout.setHorizontalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientGlownyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientGlownyLayout.createSequentialGroup()
                        .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(gradientGlownyLayout.createSequentialGroup()
                                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textOpis)
                                    .addComponent(textOdbiorca))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                                        .addComponent(przyciskWyslij)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(przyciskAnuluj)
                                        .addGap(110, 110, 110))
                                    .addComponent(poleIDProd)))
                            .addGroup(gradientGlownyLayout.createSequentialGroup()
                                .addComponent(textNumer)
                                .addGap(67, 67, 67)
                                .addComponent(poleNumer)))
                        .addGap(28, 28, 28))
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textNadawca)
                            .addComponent(textTyp))
                        .addGap(47, 47, 47)
                        .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(poleWyborTyp, 0, 180, Short.MAX_VALUE)
                            .addComponent(poleWyborNadawca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(poleWyborOdbiorca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        gradientGlownyLayout.setVerticalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientGlownyLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNumer)
                    .addComponent(poleNumer, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTyp)
                    .addComponent(poleWyborTyp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNadawca)
                    .addComponent(poleWyborNadawca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textOdbiorca)
                    .addComponent(poleWyborOdbiorca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textOpis)
                    .addComponent(poleIDProd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(przyciskWyslij)
                    .addComponent(przyciskAnuluj))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        getContentPane().add(gradientGlowny, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 460, 340));

        gradientStopka.setkEndColor(new java.awt.Color(98, 98, 98));
        gradientStopka.setkGradientFocus(600);
        gradientStopka.setkStartColor(new java.awt.Color(41, 59, 76));

        textStopkaL.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaL.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaL.setText(" ver. 1.0.0");
        textStopkaL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        textStopkaP.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaP.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaP.setText("Copyright ¬© Projekt i kodowanie: Marcin Kos");
        textStopkaP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout gradientStopkaLayout = new javax.swing.GroupLayout(gradientStopka);
        gradientStopka.setLayout(gradientStopkaLayout);
        gradientStopkaLayout.setHorizontalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientStopkaLayout.createSequentialGroup()
                .addComponent(textStopkaL, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(textStopkaP, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        gradientStopkaLayout.setVerticalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(textStopkaL, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addComponent(textStopkaP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(gradientStopka, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 460, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textWyjscieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textWyjscieMouseClicked
        this.dispose();
    }//GEN-LAST:event_textWyjscieMouseClicked

    private void textMinimalizujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMinimalizujMouseClicked
        this.setState(FormDodajDokument.ICONIFIED);
    }//GEN-LAST:event_textMinimalizujMouseClicked

    private void gradientNaglowekMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_gradientNaglowekMouseDragged

    private void gradientNaglowekMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_gradientNaglowekMousePressed

    private void przyciskWyslijMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskWyslijMouseClicked

        int id_typ;
        String typ = poleWyborTyp.getSelectedItem().toString();
        String numer = poleNumer.getText();
        DateFormat df = new SimpleDateFormat("yyy-MM-dd");
        Date data = new Date();
        String nadawca_nazwa = poleWyborNadawca.getSelectedItem().toString();
        String odbiorca_nazwa = poleWyborOdbiorca.getSelectedItem().toString();
       
        int id_PZ;
        int id_WWPW;
        int id_o;

        try {
            PreparedStatement dodajDok;
            PreparedStatement pobierz;
            ResultSet wynik;
            con.setAutoCommit(false);

            String query = "INSERT INTO dokumenty (id_t,numer,data_wydania,id_PZ,id_WWPW,id_o) VALUES(?,?,?,?,?,?)";
            String query2 = "SELECT id_t FROM typy_dokumentow WHERE nazwa='" + typ + "'";
            String query3 = "SELECT id_m FROM magazyny WHERE nazwa='" + nadawca_nazwa + "'";
            String query4 = "SELECT id_d FROM dostawcy WHERE nazwa='" + nadawca_nazwa + "'";
            String query5 = "SELECT id_m FROM magazyny WHERE nazwa='" + odbiorca_nazwa + "'";
            pobierz = con.prepareStatement(query2);
            wynik = pobierz.executeQuery();
            wynik.next();
            id_typ = wynik.getInt(1);

            if (typ.equals("PW") || typ.equals("WW")) {
                pobierz = con.prepareStatement(query3);
                wynik = pobierz.executeQuery();
                wynik.next();
                id_WWPW = wynik.getInt(1);
                pobierz = con.prepareStatement(query5);
                wynik = pobierz.executeQuery();
                wynik.next();
                id_o = wynik.getInt(1);
                dodajDok = con.prepareStatement(query);
                dodajDok.setInt(1, id_typ);
                dodajDok.setString(2, numer);
                dodajDok.setString(3, df.format(data));
                dodajDok.setNull(4, java.sql.Types.INTEGER);
                dodajDok.setInt(5, id_WWPW);
                dodajDok.setInt(6, id_o);
                dodajDok.executeUpdate();
            } else if (typ.equals("PZ")) {
                pobierz = con.prepareStatement(query4);
                wynik = pobierz.executeQuery();
                wynik.next();
                id_PZ = wynik.getInt(1);
                pobierz = con.prepareStatement(query5);
                wynik = pobierz.executeQuery();
                wynik.next();
                id_o = wynik.getInt(1);
                dodajDok = con.prepareStatement(query);
                dodajDok.setInt(1, id_typ);
                dodajDok.setString(2, numer);
                dodajDok.setString(3, df.format(data));
                dodajDok.setNull(5, java.sql.Types.INTEGER);
                dodajDok.setInt(4, id_PZ);
                dodajDok.setInt(6, id_o);
                dodajDok.executeUpdate();
                
            }
                dodajPozycje(id_typ, numer);
                con.commit();
                FG.pokaz_liste_dokumentow();
                JOptionPane.showMessageDialog(this, "Dokument zosta≈Ç wygenerowany!", "Dokumenty", 2);
                this.dispose();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "B≈Çƒôdne dane!", "B≈ÇƒÖd!", 2);
        }

    }//GEN-LAST:event_przyciskWyslijMouseClicked

    private void przyciskWyslijActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskWyslijActionPerformed

    }//GEN-LAST:event_przyciskWyslijActionPerformed

    private void przyciskAnulujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskAnulujMouseClicked
        poleIDProd.setText("");
        poleNumer.setText("");
    }//GEN-LAST:event_przyciskAnulujMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDodajDokument.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDodajDokument.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDodajDokument.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDodajDokument.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDodajDokument().setVisible(true);
            }
        });
    }

    public void wypelnijDane() {
        try {
            PreparedStatement pobierz;
            ResultSet wynik;
            String query = "SELECT nazwa FROM typy_dokumentow";
            String query2 = "SELECT nazwa, miasto FROM dostawcy";
            String query3 = "SELECT nazwa,miasto FROM magazyny";

            pobierz = con.prepareStatement(query);
            wynik = pobierz.executeQuery(query);

            while (wynik.next()) {
                poleWyborTyp.addItem(wynik.getString(1));
            }

            pobierz = con.prepareStatement(query2);
            wynik = pobierz.executeQuery(query2);

            while (wynik.next()) {
                poleWyborNadawca.addItem(wynik.getString(1));
            }

            pobierz = con.prepareStatement(query3);
            wynik = pobierz.executeQuery(query3);

            while (wynik.next()) {
                poleWyborOdbiorca.addItem(wynik.getString(1));
                poleWyborNadawca.addItem(wynik.getString(1));
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e, "B≈ÇƒÖd!", 2);
        }
    }
    
    public void dodajPozycje(int id_t, String numer){
        
        try {
            String produkty = poleIDProd.getText();
            String [] idProd = produkty.split(",");
            int id_do;
            PreparedStatement pobierz;
            PreparedStatement dodaj;
            ResultSet wynik;
            
            String query="SELECT id_do FROM dokumenty WHERE id_t='"+id_t+"'" + " AND numer='"+numer+"'";
            pobierz = con.prepareStatement(query);
            wynik = pobierz.executeQuery();
            wynik.next();
            id_do = wynik.getInt(1);
            
            
            
            for(String prod : idProd){
                String query2 ="INSERT INTO pozycje (id_p,id_d) VALUES ("+prod+","+id_do+")";
                dodaj = con.prepareStatement(query2);
                dodaj.executeUpdate();
                System.out.println(dodaj);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormDodajDokument.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel gradientGlowny;
    private keeptoo.KGradientPanel gradientNaglowek;
    private keeptoo.KGradientPanel gradientStopka;
    private javax.swing.JTextField poleIDProd;
    private javax.swing.JTextField poleNumer;
    private javax.swing.JComboBox<String> poleWyborNadawca;
    private javax.swing.JComboBox<String> poleWyborOdbiorca;
    private javax.swing.JComboBox<String> poleWyborTyp;
    private javax.swing.JButton przyciskAnuluj;
    private javax.swing.JButton przyciskWyslij;
    private javax.swing.JLabel textMinimalizuj;
    private javax.swing.JLabel textNadawca;
    private javax.swing.JLabel textNaglowek;
    private javax.swing.JLabel textNumer;
    private javax.swing.JLabel textOdbiorca;
    private javax.swing.JLabel textOpis;
    private javax.swing.JLabel textStopkaL;
    private javax.swing.JLabel textStopkaP;
    private javax.swing.JLabel textTyp;
    private javax.swing.JLabel textWyjscie;
    // End of variables declaration//GEN-END:variables
}
