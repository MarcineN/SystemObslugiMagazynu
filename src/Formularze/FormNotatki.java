/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularze;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Marcin
 */
public class FormNotatki extends javax.swing.JFrame {

    private int xMouse;
    private int yMouse;
    private int dlugosc_notatki = 600;
    private Connection con;
    private Uzytkownik U;

    /**
     * Creates new form FormNotatki
     */
    public FormNotatki(Connection con, Uzytkownik U) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.con = con;
        this.U = U;
        textStopkaL.setText(KonfiguracjaSystemu.getWersja());
        uzupelnijOgolne();
    }

    public FormNotatki() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupaPrzycisków = new javax.swing.ButtonGroup();
        gradientNaglowek = new keeptoo.KGradientPanel();
        textWyjscie = new javax.swing.JLabel();
        textMinimalizuj = new javax.swing.JLabel();
        textNaglowek = new javax.swing.JLabel();
        gradientGlowny = new keeptoo.KGradientPanel();
        textOpis = new javax.swing.JLabel();
        przyciskZapisz = new javax.swing.JButton();
        przyciskAnuluj = new javax.swing.JButton();
        poleNotatka = new javax.swing.JTextArea();
        pOgolne = new javax.swing.JRadioButton();
        pPrywatne = new javax.swing.JRadioButton();
        textOstEdycja = new javax.swing.JLabel();
        textEdytujacy = new javax.swing.JLabel();
        poleOstEdycja = new javax.swing.JLabel();
        poleEdytujacy = new javax.swing.JLabel();
        gradientStopka = new keeptoo.KGradientPanel();
        textStopkaL = new javax.swing.JLabel();
        textStopkaP = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        gradientNaglowek.setkEndColor(new java.awt.Color(65, 131, 215));
        gradientNaglowek.setkGradientFocus(600);
        gradientNaglowek.setkStartColor(new java.awt.Color(58, 83, 155));
        gradientNaglowek.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                gradientNaglowekMouseDragged(evt);
            }
        });
        gradientNaglowek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gradientNaglowekMousePressed(evt);
            }
        });

        textWyjscie.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        textWyjscie.setForeground(new java.awt.Color(255, 255, 255));
        textWyjscie.setText("X");
        textWyjscie.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textWyjscie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textWyjscieMouseClicked(evt);
            }
        });

        textMinimalizuj.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        textMinimalizuj.setForeground(new java.awt.Color(255, 255, 255));
        textMinimalizuj.setText("-");
        textMinimalizuj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        textMinimalizuj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textMinimalizujMouseClicked(evt);
            }
        });

        textNaglowek.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textNaglowek.setForeground(new java.awt.Color(255, 255, 255));
        textNaglowek.setText("NOTATKI");

        javax.swing.GroupLayout gradientNaglowekLayout = new javax.swing.GroupLayout(gradientNaglowek);
        gradientNaglowek.setLayout(gradientNaglowekLayout);
        gradientNaglowekLayout.setHorizontalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gradientNaglowekLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textNaglowek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textWyjscie)
                .addGap(21, 21, 21))
        );
        gradientNaglowekLayout.setVerticalGroup(
            gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientNaglowekLayout.createSequentialGroup()
                .addGroup(gradientNaglowekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textWyjscie)
                    .addComponent(textMinimalizuj, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textNaglowek))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        getContentPane().add(gradientNaglowek, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 50));

        gradientGlowny.setkEndColor(new java.awt.Color(44, 62, 80));
        gradientGlowny.setkStartColor(new java.awt.Color(44, 62, 80));

        textOpis.setBackground(new java.awt.Color(65, 131, 215));
        textOpis.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        textOpis.setForeground(new java.awt.Color(105, 163, 237));
        textOpis.setText("Notatki");

        przyciskZapisz.setBackground(new java.awt.Color(75, 119, 190));
        przyciskZapisz.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        przyciskZapisz.setForeground(new java.awt.Color(255, 255, 255));
        przyciskZapisz.setText("Zapisz");
        przyciskZapisz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskZapiszMouseClicked(evt);
            }
        });
        przyciskZapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskZapiszActionPerformed(evt);
            }
        });

        przyciskAnuluj.setBackground(new java.awt.Color(246, 71, 71));
        przyciskAnuluj.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        przyciskAnuluj.setForeground(new java.awt.Color(255, 255, 255));
        przyciskAnuluj.setText("Anuluj");
        przyciskAnuluj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                przyciskAnulujMouseClicked(evt);
            }
        });
        przyciskAnuluj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskAnulujActionPerformed(evt);
            }
        });

        poleNotatka.setBackground(new java.awt.Color(108, 122, 137));
        poleNotatka.setColumns(20);
        poleNotatka.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        poleNotatka.setForeground(new java.awt.Color(255, 255, 255));
        poleNotatka.setLineWrap(true);
        poleNotatka.setRows(5);
        poleNotatka.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));
        poleNotatka.setMargin(new java.awt.Insets(1, 1, 1, 1));
        poleNotatka.setMaximumSize(null);
        poleNotatka.setMinimumSize(new java.awt.Dimension(106, 208));
        poleNotatka.setPreferredSize(null);

        grupaPrzycisków.add(pOgolne);
        pOgolne.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        pOgolne.setForeground(new java.awt.Color(255, 255, 255));
        pOgolne.setSelected(true);
        pOgolne.setText("Notatki ogólne");
        pOgolne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pOgolneMouseClicked(evt);
            }
        });

        grupaPrzycisków.add(pPrywatne);
        pPrywatne.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        pPrywatne.setForeground(new java.awt.Color(255, 255, 255));
        pPrywatne.setText("Notatki prywatne");
        pPrywatne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pPrywatneMouseClicked(evt);
            }
        });
        pPrywatne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pPrywatneActionPerformed(evt);
            }
        });

        textOstEdycja.setBackground(new java.awt.Color(65, 131, 215));
        textOstEdycja.setForeground(new java.awt.Color(65, 131, 215));
        textOstEdycja.setText("Edycja:");

        textEdytujacy.setBackground(new java.awt.Color(65, 131, 215));
        textEdytujacy.setForeground(new java.awt.Color(65, 131, 215));
        textEdytujacy.setText("Edytujący(a):");

        poleOstEdycja.setForeground(new java.awt.Color(255, 255, 255));

        poleEdytujacy.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout gradientGlownyLayout = new javax.swing.GroupLayout(gradientGlowny);
        gradientGlowny.setLayout(gradientGlownyLayout);
        gradientGlownyLayout.setHorizontalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientGlownyLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gradientGlownyLayout.createSequentialGroup()
                                .addComponent(textOstEdycja)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(poleOstEdycja))
                            .addGroup(gradientGlownyLayout.createSequentialGroup()
                                .addComponent(textEdytujacy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(poleEdytujacy)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(przyciskZapisz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(przyciskAnuluj))
                    .addComponent(poleNotatka, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, gradientGlownyLayout.createSequentialGroup()
                        .addComponent(pOgolne)
                        .addGap(30, 30, 30)
                        .addComponent(textOpis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pPrywatne)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        gradientGlownyLayout.setVerticalGroup(
            gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientGlownyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pOgolne)
                    .addComponent(pPrywatne)
                    .addComponent(textOpis))
                .addGap(18, 18, 18)
                .addComponent(poleNotatka, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(przyciskZapisz)
                        .addComponent(przyciskAnuluj))
                    .addGroup(gradientGlownyLayout.createSequentialGroup()
                        .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textOstEdycja)
                            .addComponent(poleOstEdycja))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(gradientGlownyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textEdytujacy)
                            .addComponent(poleEdytujacy))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(gradientGlowny, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 400, 330));

        gradientStopka.setkEndColor(new java.awt.Color(98, 98, 98));
        gradientStopka.setkGradientFocus(600);
        gradientStopka.setkStartColor(new java.awt.Color(41, 59, 76));

        textStopkaL.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaL.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaL.setText(" ver. 1.0.0");
        textStopkaL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        textStopkaP.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        textStopkaP.setForeground(new java.awt.Color(255, 255, 255));
        textStopkaP.setText("Copyright © Projekt i kodowanie: Marcin Kos");
        textStopkaP.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout gradientStopkaLayout = new javax.swing.GroupLayout(gradientStopka);
        gradientStopka.setLayout(gradientStopkaLayout);
        gradientStopkaLayout.setHorizontalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientStopkaLayout.createSequentialGroup()
                .addComponent(textStopkaL, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textStopkaP, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gradientStopkaLayout.setVerticalGroup(
            gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientStopkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(textStopkaL, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                .addComponent(textStopkaP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(gradientStopka, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 400, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textWyjscieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textWyjscieMouseClicked
        this.setVisible(false);
        FormGlowny.setEdycjaOtwarta(false);
    }//GEN-LAST:event_textWyjscieMouseClicked

    private void textMinimalizujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMinimalizujMouseClicked
        this.setState(FormDodajEdytujProdukt.ICONIFIED);
    }//GEN-LAST:event_textMinimalizujMouseClicked

    private void gradientNaglowekMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_gradientNaglowekMouseDragged

    private void gradientNaglowekMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gradientNaglowekMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_gradientNaglowekMousePressed

    private void przyciskZapiszMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskZapiszMouseClicked

    }//GEN-LAST:event_przyciskZapiszMouseClicked

    private void przyciskZapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskZapiszActionPerformed
        PreparedStatement wyslijNotatke;

        String notatka = poleNotatka.getText();
        DateFormat df = new SimpleDateFormat("yyy-MM-dd HH:mm:ss");
        Date data = new Date();
        int idUzytk = U.getId();

        if (notatka.length() > dlugosc_notatki) {
            JOptionPane.showMessageDialog(this, "Notatka jest za długa! Max. " + dlugosc_notatki + " znaków!", "Błąd!", 2);
        }
        Object[] opcje = {"Tak", "Nie"};
        int czy_napewno = JOptionPane.showOptionDialog(this, "Czy napewno chcesz wysłać notatkę?", "Zmiana loginu", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcje, opcje[0]);
        if (czy_napewno == 0) {
            try {
                if (pOgolne.isSelected()) {
                    String query = "UPDATE notatki SET notatka=?,ostatnia_edycja=?,id_u_edycja=? WHERE typ_notatki=1";
                    wyslijNotatke = con.prepareStatement(query);
                    wyslijNotatke.setString(1, notatka);
                    wyslijNotatke.setString(2, df.format(data));
                    wyslijNotatke.setInt(3, idUzytk);
                    wyslijNotatke.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Notatka została wysłana!", "Wysyłanie notatki", 2);
                    uzupelnijOgolne();

                } else if (pPrywatne.isSelected()) {
                    String query = "UPDATE notatki SET notatka=?,ostatnia_edycja=? WHERE typ_notatki=0 AND id_u=?";
                    wyslijNotatke = con.prepareStatement(query);
                    wyslijNotatke.setString(1, notatka);
                    wyslijNotatke.setString(2, df.format(data));
                    wyslijNotatke.setInt(3, idUzytk);                 
                    wyslijNotatke.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Notatka została wysłana!", "Wysyłanie notatki", 2);
                    uzupelnijPrywatne();
                }
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_przyciskZapiszActionPerformed

    private void przyciskAnulujMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przyciskAnulujMouseClicked
        poleNotatka.setText("");
    }//GEN-LAST:event_przyciskAnulujMouseClicked

    private void przyciskAnulujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskAnulujActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_przyciskAnulujActionPerformed

    private void pPrywatneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pPrywatneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pPrywatneActionPerformed

    private void pOgolneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pOgolneMouseClicked

        uzupelnijOgolne();

    }//GEN-LAST:event_pOgolneMouseClicked

    private void pPrywatneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pPrywatneMouseClicked
        uzupelnijPrywatne();
    }//GEN-LAST:event_pPrywatneMouseClicked

    private void uzupelnijOgolne() {
        try {
            
            poleNotatka.setText("");
            poleEdytujacy.setVisible(true);
            textEdytujacy.setVisible(true);
            PreparedStatement pobierzNotatke;
            ResultSet wynikNotatka;
            String query = "SELECT notatka,ostatnia_edycja,imie,nazwisko FROM notatki JOIN uzytkownicy ON uzytkownicy.id_u=notatki.id_u_edycja WHERE notatki.typ_notatki=1 "; // 1 typ OGOLNY
            pobierzNotatke = con.prepareStatement(query);
            wynikNotatka = pobierzNotatke.executeQuery();
            if (wynikNotatka.next()) {
                poleNotatka.setText(wynikNotatka.getString(1));
                poleEdytujacy.setText(wynikNotatka.getString(3) + " " + wynikNotatka.getString(4));
                poleOstEdycja.setText(wynikNotatka.getString(2));
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void uzupelnijPrywatne() {
        try {
            poleNotatka.setText("");
            poleEdytujacy.setVisible(false);
            textEdytujacy.setVisible(false);
            PreparedStatement pobierzNotatke;
            ResultSet wynikNotatka;
            String query = "SELECT notatka,ostatnia_edycja FROM notatki WHERE typ_notatki=0 AND id_u='" + U.getId() + "'"; // 0 typ PRYWATNY
            
            pobierzNotatke = con.prepareStatement(query);
            wynikNotatka = pobierzNotatke.executeQuery();
            if (wynikNotatka.next()) {
                poleNotatka.setText(wynikNotatka.getString(1));
                poleOstEdycja.setText(wynikNotatka.getString(2));
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormNotatki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormNotatki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormNotatki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormNotatki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormNotatki().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel gradientGlowny;
    private keeptoo.KGradientPanel gradientNaglowek;
    private keeptoo.KGradientPanel gradientStopka;
    private javax.swing.ButtonGroup grupaPrzycisków;
    private javax.swing.JRadioButton pOgolne;
    private javax.swing.JRadioButton pPrywatne;
    private javax.swing.JLabel poleEdytujacy;
    private javax.swing.JTextArea poleNotatka;
    private javax.swing.JLabel poleOstEdycja;
    private javax.swing.JButton przyciskAnuluj;
    private javax.swing.JButton przyciskZapisz;
    private javax.swing.JLabel textEdytujacy;
    private javax.swing.JLabel textMinimalizuj;
    private javax.swing.JLabel textNaglowek;
    private javax.swing.JLabel textOpis;
    private javax.swing.JLabel textOstEdycja;
    private javax.swing.JLabel textStopkaL;
    private javax.swing.JLabel textStopkaP;
    private javax.swing.JLabel textWyjscie;
    // End of variables declaration//GEN-END:variables
}
